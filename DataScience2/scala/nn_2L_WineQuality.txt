readFileIntoArray: C:\Users\vishnu priya\Desktop\scalation_2.0\data\winequality.csv
safe_toDouble: can't parse fixed acidity to create a Double
safe_toDouble: can't parse volatile acidity to create a Double
safe_toDouble: can't parse citric acid to create a Double
safe_toDouble: can't parse residual sugar to create a Double
safe_toDouble: can't parse chlorides to create a Double
safe_toDouble: can't parse free sulfur dioxide to create a Double
safe_toDouble: can't parse total sulfur dioxide to create a Double
safe_toDouble: can't parse density to create a Double
safe_toDouble: can't parse pH to create a Double
safe_toDouble: can't parse sulphates to create a Double
safe_toDouble: can't parse alcohol to create a Double
safe_toDouble: can't parse quality to create a Double
load: read 99 data rows so far ...
load: read 199 data rows so far ...
load: read 299 data rows so far ...
load: read 399 data rows so far ...
load: read 499 data rows so far ...
load: read 599 data rows so far ...
load: read 699 data rows so far ...
load: read 799 data rows so far ...
load: read 899 data rows so far ...
load: read 999 data rows so far ...
load: read 1099 data rows so far ...
load: read 1199 data rows so far ...
load: read 1299 data rows so far ...
load: read 1399 data rows so far ...
load: read 1499 data rows so far ...
load: read 1599 data rows so far ...
load: read 1699 data rows so far ...
load: read 1799 data rows so far ...
load: read 1899 data rows so far ...
load: read 1999 data rows so far ...
load: read 2099 data rows so far ...
load: read 2199 data rows so far ...
load: read 2299 data rows so far ...
load: read 2399 data rows so far ...
load: read 2499 data rows so far ...
load: read 2599 data rows so far ...
load: read 2699 data rows so far ...
load: read 2799 data rows so far ...
load: read 2899 data rows so far ...
load: read 2999 data rows so far ...
load: read 3099 data rows so far ...
load: read 3199 data rows so far ...
load: read 3299 data rows so far ...
load: read 3399 data rows so far ...
load: read 3499 data rows so far ...
load: read 3599 data rows so far ...
load: read 3699 data rows so far ...
load: read 3799 data rows so far ...
load: read 3899 data rows so far ...
load: read 3999 data rows so far ...
load: read 4099 data rows so far ...
load: read 4199 data rows so far ...
load: read 4299 data rows so far ...
load: read 4399 data rows so far ...
load: read 4499 data rows so far ...
load: read 4599 data rows so far ...
load: read 4699 data rows so far ...
load: read 4799 data rows so far ...
load: read in an 4899-by-12 matrix from winequality.csv
-----------------------------
| Wine Quality NeuralNet_2L |
-----------------------------
auto_optimize: etaI = (0.025,0.4)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.025, result = (37.17997628368127,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0484375, result = (35.67830106814933,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.071875, result = (35.11220650103983,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0953125, result = (34.87495034948509,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.11875, result = (34.76502216587203,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1421875, result = (34.697377757895005,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.165625, result = (34.664119118531815,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1890625, result = (34.64213591686342,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2125, result = (34.629912930765975,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2359375, result = (34.67541286125671,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.259375, result = (34.7721053394893,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2828125, result = (34.615224581730835,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.30625, result = (34.606066351720195,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3296875, result = (34.742745672951045,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.353125, result = (34.69193158427436,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3765625, result = (34.599733835323846,386)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.4, result = (34.599733835323846,-3)
ending epoch = (34.599733835323846,386)

REPORT
    ----------------------------------------------------------------------------
    modelName  mn  = NeuralNet_2L_sigmoid
    ----------------------------------------------------------------------------
    hparameter hp  = HyperParameter (HashMap(lambda -> (0.01,0.01), maxEpochs -> (400,400), eta -> (0.1,0.1), nu -> (0.9,0.9), upLimit -> (4,4), beta -> (0.9,0.9), bSize -> (20,20)))
    ----------------------------------------------------------------------------
    features   fn  = Array(intercept, fixed acidity, volatile acidity, citric acid, residual sugar, chlorides, free sulfur dioxide, total sulfur dioxide, density, pH, sulphates, alcohol)
    ----------------------------------------------------------------------------
    parameter  bb  = Array(b.w = 
MatrixD(-0.894918,
 	-0.363743,
 	-1.05301,
 	-0.0293488,
 	0.824769,
 	-0.124233,
 	0.687534,
 	-0.173378,
 	-0.230390,
 	0.113903,
 	0.229812,
 	2.58084) 
 b.b = null)
    ----------------------------------------------------------------------------
    fitMap     qof = 
		rSq 	 -> VectorD(0.276853) 
		rSqBar 	 -> VectorD(0.275226) 
		sst 	 -> VectorD(47.8461) 
		sse 	 -> VectorD(34.5997) 
		mse0 	 -> VectorD(0.00706261) 
		rmse 	 -> VectorD(0.0840393) 
		mae 	 -> VectorD(0.0652652) 
		dfm 	 -> VectorD(11.0000) 
		df 	 -> VectorD(4887.00) 
		fStat 	 -> VectorD(170.088) 
		aic 	 -> VectorD(5204.85) 
		bic 	 -> VectorD(5282.81) 
		mape 	 -> VectorD(Infinity) 
		smape 	 -> VectorD(10.1063) 

    ----------------------------------------------------------------------------
        
Run + title
--------------------
| Cross-Validation |
--------------------
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.10587615139608,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.894918,
 	-0.363743,
 	-1.05301,
 	-0.0293488,
 	0.824769,
 	-0.124233,
 	0.687534,
 	-0.173378,
 	-0.230390,
 	0.113903,
 	0.229812,
 	2.58084) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.325050,
 	0.323530,
 	9.64184,
 	6.50776,
 	0.00664736,
 	0.0815313,
 	0.0630479,
 	11.0000,
 	4887.00,
 	213.957,
 	1088.10,
 	1146.74,
 	Infinity,
 	9.82101)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.712667791532052,314)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.894918,
 	-0.363743,
 	-1.05301,
 	-0.0293488,
 	0.824769,
 	-0.124233,
 	0.687534,
 	-0.173378,
 	-0.230390,
 	0.113903,
 	0.229812,
 	2.58084) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.259163,
 	0.257495,
 	9.30007,
 	6.88983,
 	0.00703762,
 	0.0838906,
 	0.0663395,
 	11.0000,
 	4887.00,
 	155.417,
 	1061.06,
 	1119.69,
 	10.4464,
 	10.2247)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.39462833461935,234)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.894918,
 	-0.363743,
 	-1.05301,
 	-0.0293488,
 	0.824769,
 	-0.124233,
 	0.687534,
 	-0.173378,
 	-0.230390,
 	0.113903,
 	0.229812,
 	2.58084) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.244969,
 	0.243269,
 	9.54819,
 	7.20918,
 	0.00736382,
 	0.0858127,
 	0.0656401,
 	11.0000,
 	4887.00,
 	144.144,
 	1038.45,
 	1097.09,
 	10.5296,
 	10.1555)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.212375774839934,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.894918,
 	-0.363743,
 	-1.05301,
 	-0.0293488,
 	0.824769,
 	-0.124233,
 	0.687534,
 	-0.173378,
 	-0.230390,
 	0.113903,
 	0.229812,
 	2.58084) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.255639,
 	0.253964,
 	9.97311,
 	7.42360,
 	0.00758283,
 	0.0870795,
 	0.0680743,
 	11.0000,
 	4887.00,
 	152.579,
 	1023.27,
 	1081.91,
 	10.9683,
 	10.6082)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.90913559733318,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.894918,
 	-0.363743,
 	-1.05301,
 	-0.0293488,
 	0.824769,
 	-0.124233,
 	0.687534,
 	-0.173378,
 	-0.230390,
 	0.113903,
 	0.229812,
 	2.58084) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.282235,
 	0.280619,
 	9.31580,
 	6.68656,
 	0.00682999,
 	0.0826437,
 	0.0636708,
 	11.0000,
 	4887.00,
 	174.694,
 	1075.45,
 	1134.08,
 	10.0001,
 	9.79315)
-----------------------------------------------
| showQofStatTable: Statistical Table for QoF |
-----------------------------------------------
|        name |   num |        min |        max |       mean |      stdev |   interval |
----------------------------------------------------------------------------------------
|         rSq |     5 |      0.245 |      0.325 |      0.273 |      0.032 |      0.040 |
|      rSqBar |     5 |      0.243 |      0.324 |      0.272 |      0.032 |      0.040 |
|         sst |     5 |      9.300 |      9.973 |      9.556 |      0.276 |      0.343 |
|         sse |     5 |      6.508 |      7.424 |      6.943 |      0.374 |      0.465 |
|        mse0 |     5 |      0.007 |      0.008 |      0.007 |      0.000 |      0.000 |
|        rmse |     5 |      0.082 |      0.087 |      0.084 |      0.002 |      0.003 |
|         mae |     5 |      0.063 |      0.068 |      0.065 |      0.002 |      0.003 |
|         dfm |     5 |     11.000 |     11.000 |     11.000 |      0.000 |      0.000 |
|          df |     5 |   4887.000 |   4887.000 |   4887.000 |      0.000 |      0.000 |
|       fStat |     5 |    144.144 |    213.957 |    168.158 |     27.938 |     34.696 |
|         aic |     5 |   1023.268 |   1088.104 |   1057.264 |     26.486 |     32.893 |
|         bic |     5 |   1081.906 |   1146.743 |   1115.902 |     26.486 |     32.893 |
|        mape |     5 |     10.000 |   Infinity |   Infinity |        NaN |        NaN |
|       smape |     5 |      9.793 |     10.608 |     10.121 |      0.334 |      0.415 |
----------------------------------------------------------------------------------------
ox_fname = Array(intercept, fixed acidity, volatile acidity, citric acid, residual sugar, chlorides, free sulfur dioxide, total sulfur dioxide, density, pH, sulphates, alcohol)
----------------------------------------
| Feature Selection Technique: Forward |
----------------------------------------
-------------------------------------------------------------------------------------
| forwardSelAll: (l = 0) INITIAL variable (0, intercept) => cols = LinkedHashSet(0) |
-------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (47.4314615557612,400)
optimize2: bSize = 20, nB = 244
ending epoch = (46.13049459050667,400)
optimize2: bSize = 20, nB = 244
ending epoch = (47.84595430134461,400)
optimize2: bSize = 20, nB = 244
ending epoch = (47.41059957342441,400)
optimize2: bSize = 20, nB = 244
ending epoch = (45.95024045720656,400)
optimize2: bSize = 20, nB = 244
ending epoch = (47.842798445380566,400)
optimize2: bSize = 20, nB = 244
ending epoch = (46.433971880318666,400)
optimize2: bSize = 20, nB = 244
ending epoch = (47.82122560006945,91)
optimize2: bSize = 20, nB = 244
ending epoch = (47.46374912528013,400)
optimize2: bSize = 20, nB = 244
ending epoch = (47.678525941814904,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.596808668416124,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (31.311501156581603,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.962630,
 	2.17074) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.245332,
 	0.245178,
 	9.64184,
 	7.27639,
 	0.00743247,
 	0.0862118,
 	0.0672879,
 	1.00000,
 	4897.00,
 	1591.94,
 	1013.52,
 	1023.30,
 	Infinity,
 	10.5112)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (30.830870685432973,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.03950,
 	2.25957) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.167107,
 	0.166937,
 	9.30007,
 	7.74596,
 	0.00791212,
 	0.0889501,
 	0.0703200,
 	1.00000,
 	4897.00,
 	982.507,
 	983.722,
 	993.495,
 	11.1054,
 	10.8431)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (30.74207011342138,241)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.02879,
 	2.25253) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.180138,
 	0.179970,
 	9.54819,
 	7.82820,
 	0.00799612,
 	0.0894210,
 	0.0701508,
 	1.00000,
 	4897.00,
 	1075.96,
 	978.502,
 	988.275,
 	11.2793,
 	10.8904)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (30.258664605509036,201)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.02225,
 	2.24728) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.166365,
 	0.166195,
 	9.97311,
 	8.31393,
 	0.00849227,
 	0.0921535,
 	0.0727418,
 	1.00000,
 	4897.00,
 	977.276,
 	947.676,
 	957.449,
 	11.8831,
 	11.3669)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (30.258664605509036,-3)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.02225,
 	2.24728) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.204417,
 	0.204254,
 	9.31580,
 	7.41150,
 	0.00757048,
 	0.0870085,
 	0.0685325,
 	1.00000,
 	4897.00,
 	1258.23,
 	1004.95,
 	1014.72,
 	10.8988,
 	10.5911)
----------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 1) ADD variable (11, alcohol) => cols = LinkedHashSet(0, 11) @ 0.19314832855557773 |
----------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (38.4882085541181,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.14343246818616,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.573345873555425,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.09994879879897,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.49002239266364,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.01878909662598,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.667964367964714,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.70309252688459,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.64232509160925,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.42492633743671,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (29.322696675260044,299)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.749428,
 	2.23252,
 	-1.04788) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.294256,
 	0.293967,
 	9.64184,
 	6.80467,
 	0.00695063,
 	0.0833705,
 	0.0646071,
 	2.00000,
 	4896.00,
 	1020.68,
 	1048.30,
 	1062.96,
 	Infinity,
 	10.0616)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.94940578531757,257)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.811601,
 	2.32011,
 	-1.05981) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.229183,
 	0.228868,
 	9.30007,
 	7.16865,
 	0.00732242,
 	0.0855711,
 	0.0674572,
 	2.00000,
 	4896.00,
 	727.853,
 	1023.63,
 	1038.29,
 	10.6268,
 	10.3734)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.50024265081321,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.801069,
 	2.33402,
 	-1.12268) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.200986,
 	0.200660,
 	9.54819,
 	7.62914,
 	0.00779278,
 	0.0882767,
 	0.0681902,
 	2.00000,
 	4896.00,
 	615.777,
 	992.416,
 	1007.08,
 	10.9327,
 	10.5496)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.480916129991524,347)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.816908,
 	2.31650,
 	-1.00941) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.233245,
 	0.232931,
 	9.97311,
 	7.64694,
 	0.00781097,
 	0.0883797,
 	0.0696650,
 	2.00000,
 	4896.00,
 	744.674,
 	991.209,
 	1005.87,
 	11.3027,
 	10.8503)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.480916129991524,-3)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.816908,
 	2.31650,
 	-1.00941) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.258941,
 	0.258639,
 	9.31580,
 	6.90356,
 	0.00705164,
 	0.0839740,
 	0.0651501,
 	2.00000,
 	4896.00,
 	855.383,
 	1041.59,
 	1056.25,
 	10.2844,
 	10.0282)
---------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 2) ADD variable (2, volatile acidity) => cols = LinkedHashSet(0, 11, 2) @ 0.24428090623863574 |
---------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (36.002137545210985,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.140273758472446,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.36547664489456,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.125168549811605,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.68180856009153,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.09215614807253,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.18188570890767,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.14141621944974,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.011753478279545,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.639641196301255,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.03281,
 	2.53009,
 	-1.09968,
 	0.773916) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.319037,
 	0.318619,
 	9.64184,
 	6.56574,
 	0.00670658,
 	0.0818937,
 	0.0636090,
 	3.00000,
 	4895.00,
 	764.448,
 	1067.35,
 	1086.90,
 	Infinity,
 	9.90980)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.182210663470403,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.13776,
 	2.68009,
 	-1.12152,
 	0.853419) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.247238,
 	0.246777,
 	9.30007,
 	7.00074,
 	0.00715091,
 	0.0845630,
 	0.0669081,
 	3.00000,
 	4895.00,
 	535.906,
 	1037.22,
 	1056.77,
 	10.5730,
 	10.2965)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.83194989438898,235)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.12485,
 	2.67633,
 	-1.17496,
 	0.840600) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.230183,
 	0.229711,
 	9.54819,
 	7.35036,
 	0.00750803,
 	0.0866489,
 	0.0670160,
 	3.00000,
 	4895.00,
 	487.884,
 	1013.00,
 	1032.55,
 	10.7372,
 	10.3682)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.648622392450644,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.16496,
 	2.68695,
 	-1.07221,
 	0.915567) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.244796,
 	0.244333,
 	9.97311,
 	7.53174,
 	0.00769330,
 	0.0877114,
 	0.0688755,
 	3.00000,
 	4895.00,
 	528.897,
 	1000.44,
 	1019.99,
 	11.1486,
 	10.7234)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.386701295643157,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.15130,
 	2.67052,
 	-1.13658,
 	0.936643) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.268494,
 	0.268046,
 	9.31580,
 	6.81457,
 	0.00696074,
 	0.0834311,
 	0.0645076,
 	3.00000,
 	4895.00,
 	598.891,
 	1050.12,
 	1069.66,
 	10.1165,
 	9.91927)
---------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 3) ADD variable (4, residual sugar) => cols = LinkedHashSet(0, 11, 2, 4) @ 0.2603960369340379 |
---------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (35.16230178723652,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.352030468656345,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.41238109461523,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.13327486183215,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.4120080911284,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.37838886938646,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.39001086018592,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.234605102777685,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.448459011589623,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.12393,
 	2.57226,
 	-1.06803,
 	0.673781,
 	0.530376) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.325493,
 	0.324941,
 	9.64184,
 	6.50349,
 	0.00664299,
 	0.0815046,
 	0.0633277,
 	4.00000,
 	4894.00,
 	590.416,
 	1073.91,
 	1098.34,
 	Infinity,
 	9.87110)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.957658134419113,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.24334,
 	2.71991,
 	-1.08841,
 	0.737709,
 	0.586974) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.251624,
 	0.251012,
 	9.30007,
 	6.95995,
 	0.00710924,
 	0.0843163,
 	0.0667367,
 	4.00000,
 	4894.00,
 	411.374,
 	1042.08,
 	1066.52,
 	10.5244,
 	10.2785)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.64710934095586,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.22332,
 	2.72134,
 	-1.14338,
 	0.723922,
 	0.577411) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.237295,
 	0.236672,
 	9.54819,
 	7.28245,
 	0.00743867,
 	0.0862477,
 	0.0663501,
 	4.00000,
 	4894.00,
 	380.659,
 	1019.60,
 	1044.03,
 	10.6408,
 	10.2630)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.475283266077028,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.25698,
 	2.72761,
 	-1.03824,
 	0.805230,
 	0.569521) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.251666,
 	0.251055,
 	9.97311,
 	7.46322,
 	0.00762331,
 	0.0873116,
 	0.0686708,
 	4.00000,
 	4894.00,
 	411.466,
 	1007.00,
 	1031.43,
 	11.1361,
 	10.6956)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.472185671369374,133)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.25925,
 	2.72555,
 	-1.03909,
 	0.804767,
 	0.569430) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.272847,
 	0.272253,
 	9.31580,
 	6.77401,
 	0.00691932,
 	0.0831824,
 	0.0645214,
 	4.00000,
 	4894.00,
 	459.090,
 	1055.05,
 	1079.48,
 	10.1690,
 	9.92472)
-----------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 4) ADD variable (6, free sulfur dioxide) => cols = LinkedHashSet(0, 11, 2, 4, 6) @ 0.2651019781919398 |
-----------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.967831625334505,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.141792506277774,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.18975723214398,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.125853294114805,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.11733301181499,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.178248244284966,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.02777015046359,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.308100259504766,195)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.776675,
 	2.46843,
 	-1.07961,
 	0.648683,
 	0.461623,
 	-0.536896) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.320075,
 	0.319381,
 	9.64184,
 	6.55572,
 	0.00669634,
 	0.0818312,
 	0.0634100,
 	5.00000,
 	4893.00,
 	460.677,
 	1072.42,
 	1101.74,
 	Infinity,
 	9.87479)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.859630952077328,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.979945,
 	2.66426,
 	-1.10100,
 	0.749170,
 	0.531171,
 	-0.454343) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.255381,
 	0.254620,
 	9.30007,
 	6.92501,
 	0.00707355,
 	0.0841044,
 	0.0665571,
 	5.00000,
 	4893.00,
 	335.629,
 	1046.55,
 	1075.87,
 	10.4681,
 	10.2550)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.559165400194424,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.997637,
 	2.68871,
 	-1.14910,
 	0.744141,
 	0.526367,
 	-0.391702) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.241333,
 	0.240558,
 	9.54819,
 	7.24389,
 	0.00739928,
 	0.0860191,
 	0.0661022,
 	5.00000,
 	4893.00,
 	311.295,
 	1024.21,
 	1053.53,
 	10.6223,
 	10.2247)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.33465815031321,354)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.03059,
 	2.69844,
 	-1.05022,
 	0.830575,
 	0.531211,
 	-0.421903) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.253828,
 	0.253065,
 	9.97311,
 	7.44166,
 	0.00760129,
 	0.0871854,
 	0.0686715,
 	5.00000,
 	4893.00,
 	332.894,
 	1010.35,
 	1039.67,
 	11.1189,
 	10.6953)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.33465815031321,-3)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.03059,
 	2.69844,
 	-1.05022,
 	0.830575,
 	0.531211,
 	-0.421903) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.280094,
 	0.279359,
 	9.31580,
 	6.70650,
 	0.00685036,
 	0.0827669,
 	0.0640772,
 	5.00000,
 	4893.00,
 	380.745,
 	1061.85,
 	1091.17,
 	10.0924,
 	9.85442)
--------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 5) ADD variable (1, fixed acidity) => cols = LinkedHashSet(0, 11, 2, 4, 6, 1) @ 0.2684131399865094 |
--------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.96745356098785,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.98503842327926,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.96329911236634,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.95823201501575,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.97339219179336,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.85424417850109,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.190906762595684,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.934429,
 	2.54231,
 	-1.07657,
 	0.719900,
 	0.465971,
 	-0.530348,
 	0.197600) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.325823,
 	0.324996,
 	9.64184,
 	6.50030,
 	0.00663974,
 	0.0814846,
 	0.0631353,
 	6.00000,
 	4892.00,
 	394.043,
 	1078.41,
 	1112.61,
 	Infinity,
 	9.83823)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.73867039674237,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.09884,
 	2.68185,
 	-1.09279,
 	0.774187,
 	0.512730,
 	-0.445435,
 	0.220730) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.256671,
 	0.255759,
 	9.30007,
 	6.91301,
 	0.00706130,
 	0.0840315,
 	0.0665944,
 	6.00000,
 	4892.00,
 	281.534,
 	1049.40,
 	1083.61,
 	10.4717,
 	10.2658)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.429444220859818,138)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.10022,
 	2.68741,
 	-1.12752,
 	0.764834,
 	0.505568,
 	-0.419571,
 	0.230629) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.244037,
 	0.243109,
 	9.54819,
 	7.21808,
 	0.00737291,
 	0.0858657,
 	0.0658242,
 	6.00000,
 	4892.00,
 	263.202,
 	1027.96,
 	1062.17,
 	10.5563,
 	10.1823)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.21535308761074,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.14082,
 	2.69947,
 	-1.04073,
 	0.847604,
 	0.499137,
 	-0.428192,
 	0.238064) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.254919,
 	0.254005,
 	9.97311,
 	7.43078,
 	0.00759017,
 	0.0871216,
 	0.0683212,
 	6.00000,
 	4892.00,
 	278.955,
 	1013.01,
 	1047.22,
 	11.0518,
 	10.6438)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.969888739459883,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.14327,
 	2.69446,
 	-1.09874,
 	0.841921,
 	0.574719,
 	-0.360110,
 	0.179618) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.282219,
 	0.281339,
 	9.31580,
 	6.68670,
 	0.00683014,
 	0.0826446,
 	0.0638383,
 	6.00000,
 	4892.00,
 	320.575,
 	1065.31,
 	1099.51,
 	10.0142,
 	9.81813)
---------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 6) ADD variable (10, sulphates) => cols = LinkedHashSet(0, 11, 2, 4, 6, 1, 10) @ 0.2706405218793251 |
---------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.8570656771319,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.858407302987686,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.82757342519689,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.830349614801875,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.88346942438696,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.153625017182645,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.872499,
 	2.48020,
 	-1.04192,
 	0.753086,
 	0.646024,
 	-0.504076,
 	0.221814,
 	-0.212376) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.324457,
 	0.323490,
 	9.64184,
 	6.51347,
 	0.00665319,
 	0.0815671,
 	0.0632546,
 	7.00000,
 	4891.00,
 	335.586,
 	1079.50,
 	1118.60,
 	Infinity,
 	9.85384)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.718968932009084,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.05389,
 	2.62869,
 	-1.06175,
 	0.795154,
 	0.674701,
 	-0.423209,
 	0.238491,
 	-0.166397) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.258379,
 	0.257318,
 	9.30007,
 	6.89712,
 	0.00704507,
 	0.0839349,
 	0.0664083,
 	7.00000,
 	4891.00,
 	243.431,
 	1052.52,
 	1091.61,
 	10.4465,
 	10.2358)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.409639432062484,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.06907,
 	2.64172,
 	-1.11422,
 	0.780877,
 	0.645862,
 	-0.371897,
 	0.249702,
 	-0.159814) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.244671,
 	0.243590,
 	9.54819,
 	7.21203,
 	0.00736673,
 	0.0858297,
 	0.0658210,
 	7.00000,
 	4891.00,
 	226.332,
 	1030.37,
 	1069.47,
 	10.5568,
 	10.1830)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.20558917388346,206)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.09740,
 	2.64930,
 	-1.02926,
 	0.838867,
 	0.634676,
 	-0.397137,
 	0.248294,
 	-0.125688) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.256715,
 	0.255651,
 	9.97311,
 	7.41287,
 	0.00757188,
 	0.0870166,
 	0.0682554,
 	7.00000,
 	4891.00,
 	241.321,
 	1016.25,
 	1055.34,
 	11.0615,
 	10.6341)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.20558917388346,-3)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.09740,
 	2.64930,
 	-1.02926,
 	0.838867,
 	0.634676,
 	-0.397137,
 	0.248294,
 	-0.125688) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.285805,
 	0.284782,
 	9.31580,
 	6.65330,
 	0.00679602,
 	0.0824380,
 	0.0637410,
 	7.00000,
 	4891.00,
 	279.609,
 	1069.67,
 	1108.76,
 	10.0393,
 	9.80486)
-----------------------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 7) ADD variable (7, total sulfur dioxide) => cols = LinkedHashSet(0, 11, 2, 4, 6, 1, 10, 7) @ 0.27104962506758823 |
-----------------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.83567655387641,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.8325603340915,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.80239884381851,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.8293593096004,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.16050641181499,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.612937,
 	2.50930,
 	-1.04098,
 	0.772765,
 	0.649981,
 	-0.472822,
 	0.226470,
 	-0.200711,
 	-0.333863) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.320659,
 	0.319548,
 	9.64184,
 	6.55009,
 	0.00669059,
 	0.0817961,
 	0.0632228,
 	8.00000,
 	4890.00,
 	288.519,
 	1078.95,
 	1122.93,
 	Infinity,
 	9.83861)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.745441190639827,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.768323,
 	2.64785,
 	-1.06020,
 	0.811830,
 	0.677049,
 	-0.401472,
 	0.243213,
 	-0.157407,
 	-0.329209) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.258295,
 	0.257081,
 	9.30007,
 	6.89791,
 	0.00704587,
 	0.0839397,
 	0.0664373,
 	8.00000,
 	4890.00,
 	212.864,
 	1054.47,
 	1098.45,
 	10.4598,
 	10.2400)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.434507909120086,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.831600,
 	2.63825,
 	-1.11530,
 	0.788651,
 	0.644332,
 	-0.368989,
 	0.248690,
 	-0.160136,
 	-0.248939) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.244967,
 	0.243731,
 	9.54819,
 	7.20920,
 	0.00736384,
 	0.0858128,
 	0.0657896,
 	8.00000,
 	4890.00,
 	198.317,
 	1032.56,
 	1076.54,
 	10.5439,
 	10.1780)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.230317562698534,151)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.865117,
 	2.64065,
 	-1.03961,
 	0.836296,
 	0.637579,
 	-0.390139,
 	0.247531,
 	-0.128391,
 	-0.236205) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.257259,
 	0.256044,
 	9.97311,
 	7.40744,
 	0.00756633,
 	0.0869847,
 	0.0682171,
 	8.00000,
 	4890.00,
 	211.715,
 	1018.60,
 	1062.58,
 	11.0530,
 	10.6275)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.230317562698534,-3)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.865117,
 	2.64065,
 	-1.03961,
 	0.836296,
 	0.637579,
 	-0.390139,
 	0.247531,
 	-0.128391,
 	-0.236205) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.285703,
 	0.284534,
 	9.31580,
 	6.65425,
 	0.00679699,
 	0.0824438,
 	0.0637280,
 	8.00000,
 	4890.00,
 	244.486,
 	1071.62,
 	1115.60,
 	10.0355,
 	9.80282)
-------------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 8) ADD variable (8, density) => cols = LinkedHashSet(0, 11, 2, 4, 6, 1, 10, 7, 8) @ 0.27142757389793026 |
-------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.81181002666876,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.86227292502711,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.797973508648035,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.15345229450533,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.605720,
 	2.51293,
 	-1.04058,
 	0.773195,
 	0.651965,
 	-0.470253,
 	0.228541,
 	-0.200173,
 	-0.333965,
 	-0.0128044) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.320723,
 	0.319472,
 	9.64184,
 	6.54948,
 	0.00668997,
 	0.0817922,
 	0.0632330,
 	9.00000,
 	4889.00,
 	256.484,
 	1081.00,
 	1129.86,
 	Infinity,
 	9.84004)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.757030700864814,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.773094,
 	2.64432,
 	-1.06017,
 	0.812534,
 	0.676985,
 	-0.399954,
 	0.241986,
 	-0.159259,
 	-0.340731,
 	0.0343186) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.258718,
 	0.257354,
 	9.30007,
 	6.89397,
 	0.00704185,
 	0.0839157,
 	0.0664743,
 	9.00000,
 	4889.00,
 	189.593,
 	1056.75,
 	1105.61,
 	10.4999,
 	10.2438)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.427937156723207,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.878192,
 	2.61971,
 	-1.11531,
 	0.795175,
 	0.643941,
 	-0.355315,
 	0.238988,
 	-0.168609,
 	-0.305683,
 	0.148861) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.242867,
 	0.241473,
 	9.54819,
 	7.22925,
 	0.00738433,
 	0.0859321,
 	0.0659092,
 	9.00000,
 	4889.00,
 	174.250,
 	1033.14,
 	1082.01,
 	10.6008,
 	10.1974)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.19077566524443,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.00328,
 	2.63242,
 	-1.01806,
 	0.881574,
 	0.619971,
 	-0.370072,
 	0.236561,
 	-0.135784,
 	-0.308733,
 	0.255172) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.250123,
 	0.248743,
 	9.97311,
 	7.47861,
 	0.00763903,
 	0.0874015,
 	0.0685950,
 	9.00000,
 	4889.00,
 	181.193,
 	1015.59,
 	1064.45,
 	11.1479,
 	10.6883)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.94430927424974,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.01774,
 	2.63039,
 	-1.06831,
 	0.892115,
 	0.722269,
 	-0.292566,
 	0.193194,
 	-0.201499,
 	-0.216537,
 	0.159221) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.283771,
 	0.282452,
 	9.31580,
 	6.67225,
 	0.00681538,
 	0.0825553,
 	0.0636739,
 	9.00000,
 	4889.00,
 	215.225,
 	1072.36,
 	1121.22,
 	10.0241,
 	9.79357)
-----------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 9) ADD variable (9, pH) => cols = LinkedHashSet(0, 11, 2, 4, 6, 1, 10, 7, 8, 9) @ 0.27137121243942364 |
-----------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.79874464795163,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.83481956839372,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.131859310438248,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.598193,
 	2.51557,
 	-1.04946,
 	0.777650,
 	0.656621,
 	-0.449900,
 	0.231928,
 	-0.194424,
 	-0.329268,
 	-0.0168402,
 	-0.0886912) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.320017,
 	0.318625,
 	9.64184,
 	6.55629,
 	0.00669692,
 	0.0818347,
 	0.0632477,
 	10.0000,
 	4888.00,
 	230.041,
 	1082.52,
 	1136.27,
 	Infinity,
 	9.84288)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.769294390763978,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.777712,
 	2.64113,
 	-1.06258,
 	0.812023,
 	0.677944,
 	-0.397262,
 	0.239569,
 	-0.161121,
 	-0.347375,
 	0.0271220,
 	0.00113754) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.257371,
 	0.255851,
 	9.30007,
 	6.90650,
 	0.00705465,
 	0.0839920,
 	0.0664000,
 	10.0000,
 	4888.00,
 	169.402,
 	1057.86,
 	1111.62,
 	10.4189,
 	10.2361)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.462857564939323,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.874507,
 	2.62130,
 	-1.11647,
 	0.796340,
 	0.645659,
 	-0.349860,
 	0.240701,
 	-0.167141,
 	-0.304134,
 	0.149173,
 	-0.0164848) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.241396,
 	0.239844,
 	9.54819,
 	7.24329,
 	0.00739866,
 	0.0860155,
 	0.0660382,
 	10.0000,
 	4888.00,
 	155.542,
 	1034.16,
 	1087.91,
 	10.6477,
 	10.2175)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.18304368715614,243)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.954713,
 	2.62166,
 	-1.02902,
 	0.862505,
 	0.632211,
 	-0.367117,
 	0.236245,
 	-0.136627,
 	-0.313578,
 	0.209951,
 	-0.0320232) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.254128,
 	0.252602,
 	9.97311,
 	7.43867,
 	0.00759823,
 	0.0871678,
 	0.0683125,
 	10.0000,
 	4888.00,
 	166.540,
 	1020.40,
 	1074.15,
 	11.0638,
 	10.6437)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.18304368715614,-3)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.954713,
 	2.62166,
 	-1.02902,
 	0.862505,
 	0.632211,
 	-0.367117,
 	0.236245,
 	-0.136627,
 	-0.313578,
 	0.209951,
 	-0.0320232) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.287264,
 	0.285806,
 	9.31580,
 	6.63971,
 	0.00678213,
 	0.0823537,
 	0.0635875,
 	10.0000,
 	4888.00,
 	197.008,
 	1076.65,
 	1130.40,
 	10.0088,
 	9.78064)
------------------------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 10) ADD variable (3, citric acid) => cols = LinkedHashSet(0, 11, 2, 4, 6, 1, 10, 7, 8, 9, 3) @ 0.27120599757347474 |
------------------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.829962586970034,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.116855339853785,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.545192,
 	2.43353,
 	-1.02566,
 	0.742709,
 	0.657713,
 	-0.461984,
 	0.233915,
 	-0.184606,
 	-0.273456,
 	-0.0309114,
 	-0.0632683,
 	-0.248734) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.317540,
 	0.316004,
 	9.64184,
 	6.58016,
 	0.00672131,
 	0.0819836,
 	0.0633403,
 	11.0000,
 	4887.00,
 	206.715,
 	1082.81,
 	1141.45,
 	Infinity,
 	9.85673)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.763972850687164,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.733394,
 	2.58212,
 	-1.04448,
 	0.781708,
 	0.683144,
 	-0.410372,
 	0.241870,
 	-0.156322,
 	-0.292495,
 	0.0145863,
 	0.0249477,
 	-0.176318) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.258587,
 	0.256918,
 	9.30007,
 	6.89519,
 	0.00704310,
 	0.0839232,
 	0.0664477,
 	11.0000,
 	4887.00,
 	154.951,
 	1060.66,
 	1119.29,
 	10.5027,
 	10.2384)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.420527892782346,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.854113,
 	2.56969,
 	-1.10592,
 	0.770388,
 	0.648956,
 	-0.369144,
 	0.237213,
 	-0.168426,
 	-0.266897,
 	0.126900,
 	-0.00135252,
 	-0.121756) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.245080,
 	0.243381,
 	9.54819,
 	7.20812,
 	0.00736274,
 	0.0858064,
 	0.0655629,
 	11.0000,
 	4887.00,
 	144.231,
 	1038.65,
 	1097.29,
 	10.4848,
 	10.1436)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.17158905681414,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.985066,
 	2.59407,
 	-1.01229,
 	0.863618,
 	0.623902,
 	-0.376568,
 	0.236910,
 	-0.133805,
 	-0.271563,
 	0.234423,
 	-0.0153296,
 	-0.104158) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.253886,
 	0.252207,
 	9.97311,
 	7.44108,
 	0.00760070,
 	0.0871820,
 	0.0683261,
 	11.0000,
 	4887.00,
 	151.176,
 	1022.27,
 	1080.90,
 	11.0645,
 	10.6482)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.921518395709217,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.00185,
 	2.59957,
 	-1.06683,
 	0.877231,
 	0.729254,
 	-0.289132,
 	0.195573,
 	-0.195878,
 	-0.178759,
 	0.141185,
 	-0.0510336,
 	-0.0893609) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.283127,
 	0.281513,
 	9.31580,
 	6.67825,
 	0.00682150,
 	0.0825924,
 	0.0636561,
 	11.0000,
 	4887.00,
 	175.464,
 	1075.91,
 	1134.55,
 	10.0107,
 	9.79110)
-------------------------------------------------------------------------------------------------------------------------------------------
| forwardSelAll: (l = 11) ADD variable (5, chlorides) => cols = LinkedHashSet(0, 11, 2, 4, 6, 1, 10, 7, 8, 9, 3, 5) @ 0.27040293388173264 |
-------------------------------------------------------------------------------------------------------------------------------------------
k = 12, n = 12
Run + title
x-axis: minX = 0.0, maxX = 11.0
y-axis: minY = 19.0, maxY = 28.0
Forward: rSq = 
MatrixD(19.3313,	19.3148,	19.2672,
 	24.4589,	24.4281,	24.3322,
 	26.0849,	26.0396,	26.1949,
 	26.5702,	26.5102,	26.7785,
 	26.9160,	26.8413,	27.0142,
 	27.1534,	27.0641,	27.2734,
 	27.2091,	27.1050,	27.4005,
 	27.2618,	27.1428,	27.3376,
 	27.2710,	27.1371,	27.1240,
 	27.2694,	27.1206,	27.2035,
 	27.2041,	27.0403,	27.1644)
-----------------------------------------
| Feature Selection Technique: Backward |
-----------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.845216042393155,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.117394553530737,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.545927,
 	-0.455225,
 	-1.02235,
 	-0.0635847,
 	0.737941,
 	-0.252661,
 	0.672960,
 	-0.192668,
 	-0.275045,
 	-0.0253223,
 	0.234112,
 	2.42701) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.317502,
 	0.315966,
 	9.64184,
 	6.58053,
 	0.00672169,
 	0.0819859,
 	0.0633414,
 	11.0000,
 	4887.00,
 	206.678,
 	1082.77,
 	1141.41,
 	Infinity,
 	9.85699)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.767906252176683,172)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.634355,
 	-0.431780,
 	-1.03909,
 	-0.00248586,
 	0.753725,
 	-0.218263,
 	0.685061,
 	-0.176922,
 	-0.294408,
 	-0.0162453,
 	0.240769,
 	2.50849) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.259276,
 	0.257608,
 	9.30007,
 	6.88879,
 	0.00703655,
 	0.0838842,
 	0.0662809,
 	11.0000,
 	4887.00,
 	155.509,
 	1061.10,
 	1119.74,
 	10.4332,
 	10.2140)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.430359231287586,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.783694,
 	-0.380228,
 	-1.10162,
 	-0.000770215,
 	0.757193,
 	-0.139037,
 	0.654675,
 	-0.172848,
 	-0.283305,
 	0.107689,
 	0.239714,
 	2.54959) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.243589,
 	0.241886,
 	9.54819,
 	7.22236,
 	0.00737728,
 	0.0858911,
 	0.0657920,
 	11.0000,
 	4887.00,
 	143.070,
 	1037.65,
 	1096.29,
 	10.5817,
 	10.1795)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.20961152114939,99)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.822858,
 	-0.389264,
 	-1.04542,
 	-0.0116319,
 	0.797824,
 	-0.129751,
 	0.651156,
 	-0.147675,
 	-0.291797,
 	0.132801,
 	0.237046,
 	2.55083) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.257278,
 	0.255606,
 	9.97311,
 	7.40725,
 	0.00756614,
 	0.0869836,
 	0.0682098,
 	11.0000,
 	4887.00,
 	153.895,
 	1024.66,
 	1083.30,
 	11.0521,
 	10.6284)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.20961152114939,-3)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.822858,
 	-0.389264,
 	-1.04542,
 	-0.0116319,
 	0.797824,
 	-0.129751,
 	0.651156,
 	-0.147675,
 	-0.291797,
 	0.132801,
 	0.237046,
 	2.55083) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.287253,
 	0.285649,
 	9.31580,
 	6.63981,
 	0.00678224,
 	0.0823544,
 	0.0635510,
 	11.0000,
 	4887.00,
 	179.052,
 	1078.61,
 	1137.25,
 	10.0088,
 	9.77540)
-------------------------------------------------------------------------------------------------------------------------------------
| backwardElimAll: (l = 0) INITIAL variables (all) => cols = LinkedHashSet(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11) @ 0.27008341368997 |
-------------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.97942266080294,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.98159464771987,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.820088222288135,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.55792289696644,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.832883514400365,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.08858791455522,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.88734170800567,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.866424633457086,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.839097986328824,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.970188280283764,400)
optimize2: bSize = 20, nB = 244
ending epoch = (42.460683982570906,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.121891842449784,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.566463,
 	-0.466207,
 	-1.01896,
 	0.741853,
 	-0.249094,
 	0.659039,
 	-0.191084,
 	-0.277531,
 	-0.0193233,
 	0.231054,
 	2.43307) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.318704,
 	0.317310,
 	9.64184,
 	6.56895,
 	0.00670986,
 	0.0819137,
 	0.0632771,
 	10.0000,
 	4888.00,
 	228.656,
 	1081.61,
 	1135.36,
 	Infinity,
 	9.84679)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.738071719871087,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.745380,
 	-0.406324,
 	-1.04674,
 	0.783566,
 	-0.174304,
 	0.685555,
 	-0.157137,
 	-0.289616,
 	0.0184444,
 	0.241344,
 	2.58055) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.259095,
 	0.257579,
 	9.30007,
 	6.89047,
 	0.00703827,
 	0.0838944,
 	0.0663524,
 	10.0000,
 	4888.00,
 	170.933,
 	1058.99,
 	1112.74,
 	10.4516,
 	10.2258)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.41874015506801,182)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.793404,
 	-0.386109,
 	-1.09445,
 	0.770824,
 	-0.142275,
 	0.666034,
 	-0.169028,
 	-0.277095,
 	0.0780684,
 	0.241562,
 	2.57291) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.245369,
 	0.243825,
 	9.54819,
 	7.20536,
 	0.00735992,
 	0.0857900,
 	0.0656328,
 	10.0000,
 	4888.00,
 	158.934,
 	1036.84,
 	1090.59,
 	10.5274,
 	10.1544)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.18331644774344,334)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.915733,
 	-0.394175,
 	-1.01060,
 	0.850940,
 	-0.114979,
 	0.635225,
 	-0.136944,
 	-0.288377,
 	0.189237,
 	0.237521,
 	2.58558) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.254522,
 	0.252997,
 	9.97311,
 	7.43474,
 	0.00759422,
 	0.0871448,
 	0.0683460,
 	10.0000,
 	4888.00,
 	166.886,
 	1020.70,
 	1074.45,
 	11.0772,
 	10.6513)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.18331644774344,-3)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.915733,
 	-0.394175,
 	-1.01060,
 	0.850940,
 	-0.114979,
 	0.635225,
 	-0.136944,
 	-0.288377,
 	0.189237,
 	0.237521,
 	2.58558) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.287981,
 	0.286525,
 	9.31580,
 	6.63303,
 	0.00677531,
 	0.0823123,
 	0.0635616,
 	10.0000,
 	4888.00,
 	197.699,
 	1077.10,
 	1130.85,
 	10.0126,
 	9.77696)
---------------------------------------------------------------------------------------------------------------------------------------------
| backwardElimAll: (l = 1) REMOVE variable (3, citric acid) => cols = LinkedHashSet(0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11) @ 0.2707589967082379 |
---------------------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.95734863173551,400)
optimize2: bSize = 20, nB = 244
ending epoch = (37.02709115816142,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.53014328957264,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.83058482872894,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.04928317501187,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.85988486707334,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.824668137060534,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.83268929668429,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.94598999882674,400)
optimize2: bSize = 20, nB = 244
ending epoch = (42.475700271828515,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.151001685234483,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.749954,
 	-0.501445,
 	-1.02206,
 	0.723594,
 	-0.262810,
 	0.652392,
 	-0.196517,
 	-0.0767459,
 	0.227312,
 	2.41206) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.319615,
 	0.318362,
 	9.64184,
 	6.56016,
 	0.00670088,
 	0.0818589,
 	0.0633167,
 	9.00000,
 	4889.00,
 	255.181,
 	1080.22,
 	1129.09,
 	Infinity,
 	9.85884)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.720162308386126,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.948754,
 	-0.436923,
 	-1.04849,
 	0.765190,
 	-0.188843,
 	0.680950,
 	-0.160230,
 	-0.0293619,
 	0.239516,
 	2.56365) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.258913,
 	0.257549,
 	9.30007,
 	6.89216,
 	0.00704000,
 	0.0839047,
 	0.0663571,
 	9.00000,
 	4889.00,
 	189.785,
 	1056.87,
 	1105.74,
 	10.4518,
 	10.2261)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.38708685209929,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.05946,
 	-0.387149,
 	-1.10587,
 	0.756687,
 	-0.130452,
 	0.647566,
 	-0.169425,
 	0.0974926,
 	0.237556,
 	2.56278) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.244576,
 	0.243185,
 	9.54819,
 	7.21294,
 	0.00736766,
 	0.0858351,
 	0.0656749,
 	9.00000,
 	4889.00,
 	175.873,
 	1034.31,
 	1083.17,
 	10.5357,
 	10.1611)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.157779295345158,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.19470,
 	-0.399742,
 	-1.01158,
 	0.848764,
 	-0.114356,
 	0.621580,
 	-0.136063,
 	0.201324,
 	0.235118,
 	2.58593) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.253717,
 	0.252343,
 	9.97311,
 	7.44277,
 	0.00760242,
 	0.0871919,
 	0.0683966,
 	9.00000,
 	4889.00,
 	184.681,
 	1018.14,
 	1067.01,
 	11.0921,
 	10.6593)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.92236112028022,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.17280,
 	-0.303753,
 	-1.05948,
 	0.868931,
 	-0.0960274,
 	0.726998,
 	-0.196202,
 	0.138544,
 	0.196068,
 	2.60405) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.284249,
 	0.282931,
 	9.31580,
 	6.66780,
 	0.00681082,
 	0.0825277,
 	0.0636509,
 	9.00000,
 	4889.00,
 	215.732,
 	1072.65,
 	1121.52,
 	10.0252,
 	9.79042)
--------------------------------------------------------------------------------------------------------------------------------------
| backwardElimAll: (l = 2) REMOVE variable (8, density) => cols = LinkedHashSet(0, 1, 2, 4, 5, 6, 7, 9, 10, 11) @ 0.2708122582023401 |
--------------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (35.039560929579274,400)
optimize2: bSize = 20, nB = 244
ending epoch = (37.04805082213743,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.433763361092325,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.81703837190448,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.06443696709415,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.86141658194556,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.83360609652567,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.951015947288695,400)
optimize2: bSize = 20, nB = 244
ending epoch = (42.59129064148692,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.204235613525668,71)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.700428,
 	-0.492517,
 	-1.03536,
 	0.639378,
 	0.624093,
 	-0.229124,
 	-0.0820676,
 	0.216907,
 	2.35228) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.318689,
 	0.317574,
 	9.64184,
 	6.56909,
 	0.00671000,
 	0.0819146,
 	0.0634627,
 	8.00000,
 	4890.00,
 	285.918,
 	1077.60,
 	1121.58,
 	Infinity,
 	9.88117)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.740861809581443,367)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.945269,
 	-0.454689,
 	-1.05961,
 	0.753573,
 	0.671643,
 	-0.175958,
 	-0.0531707,
 	0.236438,
 	2.57763) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.258620,
 	0.257407,
 	9.30007,
 	6.89488,
 	0.00704278,
 	0.0839213,
 	0.0664085,
 	8.00000,
 	4890.00,
 	213.226,
 	1054.68,
 	1098.66,
 	10.4582,
 	10.2342)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.39697647970315,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.08079,
 	-0.396460,
 	-1.11602,
 	0.766733,
 	0.641744,
 	-0.175695,
 	0.0849816,
 	0.237393,
 	2.59564) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.243958,
 	0.242721,
 	9.54819,
 	7.21883,
 	0.00737368,
 	0.0858701,
 	0.0658102,
 	8.00000,
 	4890.00,
 	197.237,
 	1031.89,
 	1075.87,
 	10.5581,
 	10.1821)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.162468448588303,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.22496,
 	-0.404081,
 	-1.02112,
 	0.860792,
 	0.617844,
 	-0.139946,
 	0.193212,
 	0.233278,
 	2.61798) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.254071,
 	0.252851,
 	9.97311,
 	7.43923,
 	0.00759881,
 	0.0871711,
 	0.0683280,
 	8.00000,
 	4890.00,
 	208.198,
 	1016.38,
 	1060.36,
 	11.0649,
 	10.6463)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.162468448588303,378)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.22496,
 	-0.404081,
 	-1.02112,
 	0.860792,
 	0.617844,
 	-0.139946,
 	0.193212,
 	0.233278,
 	2.61798) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.287285,
 	0.286119,
 	9.31580,
 	6.63951,
 	0.00678193,
 	0.0823525,
 	0.0636010,
 	8.00000,
 	4890.00,
 	246.386,
 	1072.65,
 	1116.63,
 	10.0088,
 	9.78259)
-------------------------------------------------------------------------------------------------------------------------------------
| backwardElimAll: (l = 3) REMOVE variable (5, chlorides) => cols = LinkedHashSet(0, 1, 2, 4, 6, 7, 9, 10, 11) @ 0.2711211020210217 |
-------------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (35.03977404227614,400)
optimize2: bSize = 20, nB = 244
ending epoch = (37.16045381958367,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.47908505672535,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.054036654639454,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.866712938026964,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.8300276735668,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.94645170127673,400)
optimize2: bSize = 20, nB = 244
ending epoch = (43.73923513745425,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.1495501736655,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.880167,
 	-0.494108,
 	-1.03835,
 	0.754056,
 	0.671351,
 	-0.224082,
 	0.223306,
 	2.48062) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.324622,
 	0.323655,
 	9.64184,
 	6.51188,
 	0.00665157,
 	0.0815571,
 	0.0632428,
 	7.00000,
 	4891.00,
 	335.839,
 	1079.63,
 	1118.72,
 	Infinity,
 	9.85212)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.71711970394181,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.05343,
 	-0.417867,
 	-1.05904,
 	0.795351,
 	0.687714,
 	-0.171276,
 	0.240428,
 	2.63098) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.258708,
 	0.257648,
 	9.30007,
 	6.89406,
 	0.00704194,
 	0.0839163,
 	0.0664317,
 	7.00000,
 	4891.00,
 	243.849,
 	1052.74,
 	1091.83,
 	10.4722,
 	10.2382)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.409640287885797,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.07142,
 	-0.370912,
 	-1.11348,
 	0.780299,
 	0.651954,
 	-0.163217,
 	0.249427,
 	2.64065) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.244968,
 	0.243888,
 	9.54819,
 	7.20919,
 	0.00736383,
 	0.0858127,
 	0.0657765,
 	7.00000,
 	4891.00,
 	226.696,
 	1030.56,
 	1069.66,
 	10.5387,
 	10.1760)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.203112504754973,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.11347,
 	-0.404593,
 	-1.01898,
 	0.860934,
 	0.623472,
 	-0.120381,
 	0.251324,
 	2.66623) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.256217,
 	0.255152,
 	9.97311,
 	7.41783,
 	0.00757695,
 	0.0870457,
 	0.0682768,
 	7.00000,
 	4891.00,
 	240.692,
 	1015.88,
 	1054.97,
 	11.0622,
 	10.6377)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.923956154361434,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.09910,
 	-0.335686,
 	-1.07170,
 	0.873845,
 	0.719073,
 	-0.188591,
 	0.201241,
 	2.64701) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.280245,
 	0.279215,
 	9.31580,
 	6.70510,
 	0.00684892,
 	0.0827582,
 	0.0638351,
 	7.00000,
 	4891.00,
 	272.053,
 	1066.04,
 	1105.13,
 	10.0115,
 	9.81829)
----------------------------------------------------------------------------------------------------------------------------
| backwardElimAll: (l = 4) REMOVE variable (9, pH) => cols = LinkedHashSet(0, 1, 2, 4, 6, 7, 10, 11) @ 0.27099825699644575 |
----------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (35.010169828396705,400)
optimize2: bSize = 20, nB = 244
ending epoch = (37.140852215001715,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.49718880708012,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.0598336429076,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.851362116497775,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.96355198994668,400)
optimize2: bSize = 20, nB = 244
ending epoch = (43.8920226191876,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.215440905032853,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.932867,
 	-0.521378,
 	-1.07422,
 	0.720006,
 	0.469776,
 	0.201210,
 	2.54911) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.325783,
 	0.324956,
 	9.64184,
 	6.50069,
 	0.00664013,
 	0.0814870,
 	0.0632497,
 	6.00000,
 	4892.00,
 	393.971,
 	1078.38,
 	1112.59,
 	Infinity,
 	9.85669)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.733242400338302,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.09683,
 	-0.441672,
 	-1.09176,
 	0.774588,
 	0.514587,
 	0.222674,
 	2.68573) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.257110,
 	0.256199,
 	9.30007,
 	6.90892,
 	0.00705712,
 	0.0840067,
 	0.0666196,
 	6.00000,
 	4892.00,
 	282.182,
 	1049.69,
 	1083.89,
 	10.5038,
 	10.2681)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.427936798284367,299)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.10839,
 	-0.399922,
 	-1.13931,
 	0.761204,
 	0.500183,
 	0.232048,
 	2.68914) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.243645,
 	0.242718,
 	9.54819,
 	7.22182,
 	0.00737673,
 	0.0858879,
 	0.0658423,
 	6.00000,
 	4892.00,
 	262.644,
 	1027.70,
 	1061.90,
 	10.5562,
 	10.1851)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.211680173280588,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.14251,
 	-0.423303,
 	-1.04016,
 	0.848126,
 	0.498753,
 	0.238779,
 	2.70198) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.254377,
 	0.253462,
 	9.97311,
 	7.43618,
 	0.00759569,
 	0.0871533,
 	0.0683738,
 	6.00000,
 	4892.00,
 	278.159,
 	1012.63,
 	1046.83,
 	11.0718,
 	10.6521)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.969836616869532,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.14291,
 	-0.358378,
 	-1.09821,
 	0.842552,
 	0.575163,
 	0.180125,
 	2.69620) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.282945,
 	0.282065,
 	9.31580,
 	6.67995,
 	0.00682324,
 	0.0826029,
 	0.0638271,
 	6.00000,
 	4892.00,
 	321.724,
 	1065.78,
 	1099.99,
 	10.0231,
 	9.81661)
------------------------------------------------------------------------------------------------------------------------------------------
| backwardElimAll: (l = 5) REMOVE variable (7, total sulfur dioxide) => cols = LinkedHashSet(0, 1, 2, 4, 6, 10, 11) @ 0.2707008318727906 |
------------------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (35.06199969166177,400)
optimize2: bSize = 20, nB = 244
ending epoch = (37.41935264435053,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.49765676507084,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.0419167888859,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.97771158883777,400)
optimize2: bSize = 20, nB = 244
ending epoch = (45.284693734999614,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.28247609631318,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.850925,
 	-0.520524,
 	-1.08011,
 	0.708934,
 	0.494817,
 	2.54327) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.322502,
 	0.321810,
 	9.64184,
 	6.53233,
 	0.00667245,
 	0.0816850,
 	0.0633211,
 	5.00000,
 	4893.00,
 	465.832,
 	1074.05,
 	1103.37,
 	Infinity,
 	9.86215)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.852236773814358,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.999456,
 	-0.438285,
 	-1.09890,
 	0.765379,
 	0.543866,
 	2.69230) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.255487,
 	0.254726,
 	9.30007,
 	6.92402,
 	0.00707254,
 	0.0840984,
 	0.0666240,
 	5.00000,
 	4893.00,
 	335.817,
 	1046.61,
 	1075.93,
 	10.5222,
 	10.2629)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.5479623253545,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.01418,
 	-0.388796,
 	-1.15059,
 	0.747710,
 	0.530480,
 	2.69109) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.242646,
 	0.241872,
 	9.54819,
 	7.23136,
 	0.00738648,
 	0.0859446,
 	0.0659200,
 	5.00000,
 	4893.00,
 	313.529,
 	1025.09,
 	1054.41,
 	10.5456,
 	10.1957)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.337809859908745,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.03424,
 	-0.419557,
 	-1.04855,
 	0.836058,
 	0.533451,
 	2.70563) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.252876,
 	0.252112,
 	9.97311,
 	7.45115,
 	0.00761099,
 	0.0872410,
 	0.0687476,
 	5.00000,
 	4893.00,
 	331.222,
 	1009.69,
 	1039.01,
 	11.1463,
 	10.7073)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.039316816137347,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.06174,
 	-0.358168,
 	-1.10219,
 	0.829144,
 	0.602588,
 	2.69450) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.277053,
 	0.276315,
 	9.31580,
 	6.73483,
 	0.00687929,
 	0.0829415,
 	0.0641062,
 	5.00000,
 	4893.00,
 	375.027,
 	1059.87,
 	1089.18,
 	10.0675,
 	9.85841)
----------------------------------------------------------------------------------------------------------------------------
| backwardElimAll: (l = 6) REMOVE variable (10, sulphates) => cols = LinkedHashSet(0, 1, 2, 4, 6, 11) @ 0.2682064342475362 |
----------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (35.158831033929594,400)
optimize2: bSize = 20, nB = 244
ending epoch = (37.556013194902604,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.57936000651378,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.168149670176575,400)
optimize2: bSize = 20, nB = 244
ending epoch = (45.390295617628674,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.450258716104415,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.12294,
 	-1.06712,
 	0.662142,
 	0.541676,
 	2.56409) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.325310,
 	0.324759,
 	9.64184,
 	6.50525,
 	0.00664479,
 	0.0815156,
 	0.0632927,
 	4.00000,
 	4894.00,
 	589.926,
 	1073.76,
 	1098.19,
 	Infinity,
 	9.86558)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.958685256521626,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.24022,
 	-1.08727,
 	0.734834,
 	0.590761,
 	2.71969) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.251651,
 	0.251040,
 	9.30007,
 	6.95969,
 	0.00710898,
 	0.0843148,
 	0.0667489,
 	4.00000,
 	4894.00,
 	411.433,
 	1042.10,
 	1066.53,
 	10.5383,
 	10.2799)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.646827881279254,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.22342,
 	-1.14342,
 	0.722996,
 	0.578601,
 	2.72083) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.237322,
 	0.236699,
 	9.54819,
 	7.28219,
 	0.00743840,
 	0.0862462,
 	0.0663439,
 	4.00000,
 	4894.00,
 	380.716,
 	1019.63,
 	1044.06,
 	10.6382,
 	10.2620)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.472251191446812,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.25898,
 	-1.03885,
 	0.804849,
 	0.569667,
 	2.72598) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.252443,
 	0.251832,
 	9.97311,
 	7.45548,
 	0.00761540,
 	0.0872663,
 	0.0686014,
 	4.00000,
 	4894.00,
 	413.163,
 	1007.56,
 	1031.99,
 	11.1120,
 	10.6848)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.125172039013506,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.25866,
 	-1.09188,
 	0.807142,
 	0.644854,
 	2.71719) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.269790,
 	0.269193,
 	9.31580,
 	6.80250,
 	0.00694841,
 	0.0833571,
 	0.0645166,
 	4.00000,
 	4894.00,
 	452.045,
 	1053.05,
 	1077.48,
 	10.1303,
 	9.92200)
----------------------------------------------------------------------------------------------------------------------------
| backwardElimAll: (l = 7) REMOVE variable (1, fixed acidity) => cols = LinkedHashSet(0, 2, 4, 6, 11) @ 0.2645674086024762 |
----------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (37.67501421403749,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.70502226367914,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.39021943810335,400)
optimize2: bSize = 20, nB = 244
ending epoch = (45.77700373518132,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.641972519831377,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.02548,
 	-1.09879,
 	0.768148,
 	2.52554) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.318862,
 	0.318444,
 	9.64184,
 	6.56742,
 	0.00670830,
 	0.0819042,
 	0.0636426,
 	3.00000,
 	4895.00,
 	763.833,
 	1067.21,
 	1086.75,
 	Infinity,
 	9.91513)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.184483284565374,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.14427,
 	-1.12347,
 	0.851027,
 	2.67227) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.247143,
 	0.246681,
 	9.30007,
 	7.00162,
 	0.00715181,
 	0.0845684,
 	0.0668525,
 	3.00000,
 	4895.00,
 	535.632,
 	1037.16,
 	1056.70,
 	10.5189,
 	10.2902)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.832357267671846,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.11859,
 	-1.18028,
 	0.836647,
 	2.67295) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.229810,
 	0.229338,
 	9.54819,
 	7.35392,
 	0.00751167,
 	0.0866699,
 	0.0670486,
 	3.00000,
 	4895.00,
 	486.857,
 	1012.77,
 	1032.32,
 	10.7497,
 	10.3732)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.64913703478527,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.16197,
 	-1.07187,
 	0.914436,
 	2.68685) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.244273,
 	0.243810,
 	9.97311,
 	7.53695,
 	0.00769862,
 	0.0877418,
 	0.0689192,
 	3.00000,
 	4895.00,
 	527.403,
 	1000.10,
 	1019.65,
 	11.1669,
 	10.7303)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.386670480897354,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.14443,
 	-1.13481,
 	0.936690,
 	2.67491) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.271283,
 	0.270837,
 	9.31580,
 	6.78858,
 	0.00693420,
 	0.0832718,
 	0.0644421,
 	3.00000,
 	4895.00,
 	607.429,
 	1051.90,
 	1071.45,
 	10.1442,
 	9.90951)
--------------------------------------------------------------------------------------------------------------------------------
| backwardElimAll: (l = 8) REMOVE variable (6, free sulfur dioxide) => cols = LinkedHashSet(0, 2, 4, 11) @ 0.25987858687678866 |
--------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (38.10045150661417,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.14613942547103,400)
optimize2: bSize = 20, nB = 244
ending epoch = (45.79183452432177,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (29.3230030459332,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.753965,
 	-1.04724,
 	2.23663) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.294360,
 	0.294071,
 	9.64184,
 	6.80367,
 	0.00694961,
 	0.0833643,
 	0.0645938,
 	2.00000,
 	4896.00,
 	1021.19,
 	1048.36,
 	1063.02,
 	Infinity,
 	10.0596)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.948888460197857,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.826535,
 	-1.06058,
 	2.33866) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.228806,
 	0.228491,
 	9.30007,
 	7.17216,
 	0.00732600,
 	0.0855921,
 	0.0674622,
 	2.00000,
 	4896.00,
 	726.299,
 	1023.39,
 	1038.05,
 	10.6219,
 	10.3742)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.50498117485208,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.800930,
 	-1.12173,
 	2.33762) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.200700,
 	0.200373,
 	9.54819,
 	7.63187,
 	0.00779558,
 	0.0882926,
 	0.0682436,
 	2.00000,
 	4896.00,
 	614.679,
 	992.234,
 	1006.89,
 	10.9522,
 	10.5575)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.48386847224352,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.819876,
 	-1.00791,
 	2.31473) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.233896,
 	0.233583,
 	9.97311,
 	7.64044,
 	0.00780434,
 	0.0883422,
 	0.0695993,
 	2.00000,
 	4896.00,
 	747.388,
 	991.653,
 	1006.31,
 	11.2774,
 	10.8403)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (29.20067418591758,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.787729,
 	-1.07668,
 	2.28984) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.257071,
 	0.256767,
 	9.31580,
 	6.92098,
 	0.00706944,
 	0.0840800,
 	0.0651136,
 	2.00000,
 	4896.00,
 	847.065,
 	1040.41,
 	1055.07,
 	10.2471,
 	10.0204)
------------------------------------------------------------------------------------------------------------------------
| backwardElimAll: (l = 9) REMOVE variable (4, residual sugar) => cols = LinkedHashSet(0, 2, 11) @ 0.24422430676353135 |
------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (38.597469077007695,400)
optimize2: bSize = 20, nB = 244
ending epoch = (46.13132719319344,400)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (31.306968306920897,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.963740,
 	2.16989) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.245397,
 	0.245243,
 	9.64184,
 	7.27575,
 	0.00743182,
 	0.0862080,
 	0.0672877,
 	1.00000,
 	4897.00,
 	1592.51,
 	1013.56,
 	1023.34,
 	Infinity,
 	10.5112)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (30.827423338815283,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.03555,
 	2.26247) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.167314,
 	0.167144,
 	9.30007,
 	7.74404,
 	0.00791015,
 	0.0889390,
 	0.0703567,
 	1.00000,
 	4897.00,
 	983.969,
 	983.844,
 	993.617,
 	11.1342,
 	10.8483)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (30.74206874846315,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.02677,
 	2.24950) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.180167,
 	0.180000,
 	9.54819,
 	7.82792,
 	0.00799583,
 	0.0894194,
 	0.0701494,
 	1.00000,
 	4897.00,
 	1076.17,
 	978.520,
 	988.293,
 	11.2783,
 	10.8902)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (30.265478519908516,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.02323,
 	2.24080) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.167226,
 	0.167056,
 	9.97311,
 	8.30535,
 	0.00848350,
 	0.0921059,
 	0.0727080,
 	1.00000,
 	4897.00,
 	983.350,
 	948.220,
 	957.993,
 	11.8547,
 	11.3623)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (31.150315791034366,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.00199,
 	2.21215) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.203451,
 	0.203289,
 	9.31580,
 	7.42049,
 	0.00757967,
 	0.0870613,
 	0.0685641,
 	1.00000,
 	4897.00,
 	1250.77,
 	1004.38,
 	1014.15,
 	10.8833,
 	10.5955)
----------------------------------------------------------------------------------------------------------------------
| backwardElimAll: (l = 10) REMOVE variable (2, volatile acidity) => cols = LinkedHashSet(0, 11) @ 0.193134522964019 |
----------------------------------------------------------------------------------------------------------------------
k = 2, n = 12
Run + title
x-axis: minX = 0.0, maxX = 11.0
y-axis: minY = 19.0, maxY = 28.0
Backward: rSq = 
MatrixD(19.3299,	19.3135,	19.2711,
 	24.4533,	24.4224,	24.2966,
 	26.0332,	25.9879,	26.2274,
 	26.5168,	26.4567,	26.7303,
 	26.8953,	26.8206,	27.0113,
 	27.1594,	27.0701,	27.2772,
 	27.2040,	27.0998,	27.2952,
 	27.2312,	27.1121,	27.2525,
 	27.2152,	27.0812,	27.2214,
 	27.2248,	27.0759,	27.3134,
 	27.1723,	27.0083,	27.2979)
-----------------------------------------
| Feature Selection Technique: Stepwise |
-----------------------------------------
-----------------------------------------------------------------------------------------
| stepRegressionAll: (l = 0) INITIAL variable (0, intercept) => cols = LinkedHashSet(0) |
-----------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (47.43053894322564,400)
optimize2: bSize = 20, nB = 244
ending epoch = (46.12907643716564,400)
optimize2: bSize = 20, nB = 244
ending epoch = (47.85424706204272,400)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
optimize2: bSize = 20, nB = 244
ending epoch = (47.410540574195984,400)
optimize2: bSize = 20, nB = 244
ending epoch = (45.95318666485826,400)
optimize2: bSize = 20, nB = 244
ending epoch = (47.84268707173888,400)
optimize2: bSize = 20, nB = 244
ending epoch = (46.43416496284051,400)
optimize2: bSize = 20, nB = 244
ending epoch = (47.81830168918132,400)
optimize2: bSize = 20, nB = 244
ending epoch = (47.48607225725043,400)
optimize2: bSize = 20, nB = 244
ending epoch = (47.678457995957096,357)
optimize2: bSize = 20, nB = 244
ending epoch = (38.5976658342199,400)
ERROR @ PredictorMV.backwardElim: could not find a variable x_j to eliminate: best.col = -1
DEBUG @ PredictorMV.stepRegressionAll: bestf = BestStep(11,VectorD(0.193295,	0.193130,	47.8461,	38.5977,	0.00787868,	0.0887619,	0.0697934,	1.00000,	4897.00,	1173.37,	4917.01,	4930.00,	Infinity,	10.8387),scalation.modeling.neuralnet.NeuralNet_2L@4d02f94e), bestb = BestStep(-1,null,null)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (31.301009541229714,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.966369,
 	2.16797) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.245432,
 	0.245278,
 	9.64184,
 	7.27542,
 	0.00743148,
 	0.0862060,
 	0.0672871,
 	1.00000,
 	4897.00,
 	1592.81,
 	1013.58,
 	1023.36,
 	Infinity,
 	10.5111)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (30.827227565474015,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.03741,
 	2.26108) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.167265,
 	0.167095,
 	9.30007,
 	7.74449,
 	0.00791061,
 	0.0889416,
 	0.0703393,
 	1.00000,
 	4897.00,
 	983.624,
 	983.815,
 	993.588,
 	11.1206,
 	10.8458)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (30.742060434257947,286)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.02817,
 	2.25168) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.180144,
 	0.179977,
 	9.54819,
 	7.82814,
 	0.00799606,
 	0.0894207,
 	0.0701508,
 	1.00000,
 	4897.00,
 	1076.00,
 	978.506,
 	988.279,
 	11.2793,
 	10.8904)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (30.258668353281706,147)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.02254,
 	2.24791) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.166332,
 	0.166162,
 	9.97311,
 	8.31426,
 	0.00849261,
 	0.0921554,
 	0.0727430,
 	1.00000,
 	4897.00,
 	977.043,
 	947.654,
 	957.427,
 	11.8840,
 	11.3670)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (30.258668353281706,-3)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.02254,
 	2.24791) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.204438,
 	0.204276,
 	9.31580,
 	7.41130,
 	0.00757027,
 	0.0870073,
 	0.0685318,
 	1.00000,
 	4897.00,
 	1258.40,
 	1004.96,
 	1014.73,
 	10.8994,
 	10.5910)

stepRegressionAll: (l = 1) ADD variable BestStep(11,VectorD(0.193295,	0.193130,	47.8461,	38.5977,	0.00787868,	0.0887619,	0.0697934,	1.00000,	4897.00,	1173.37,	4917.01,	4930.00,	Infinity,	10.8387),scalation.modeling.neuralnet.NeuralNet_2L@4d02f94e)
--------------------------------------------------------------------------------------------------------------
| stepRegressionAll: (l = 1) ADD variable (11, alcohol) => cols = LinkedHashSet(0, 11) @ 0.19313040982899532 |
--------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (38.50318178132717,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.15030627092837,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.57880589400693,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.10025703645144,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.49050627841935,400)
optimize2: bSize = 20, nB = 244
ending epoch = (37.99776623204733,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.680163180580664,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.67080320092263,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.647652445993934,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.42223537276808,400)
optimize2: bSize = 20, nB = 244
ending epoch = (47.846081569834624,99)
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative
DEBUG @ PredictorMV.stepRegressionAll: bestf = BestStep(2,VectorD(0.244446,	0.244137,	47.8461,	36.1503,	0.00737912,	0.0859018,	0.0670094,	2.00000,	4896.00,	792.006,	5079.46,	5098.95,	Infinity,	10.3716),scalation.modeling.neuralnet.NeuralNet_2L@2b48a640), bestb = BestStep(11,VectorD(-1.27704e-08,	-1.27704e-08,	47.8461,	47.8461,	0.00976650,	0.0988256,	0.0746909,	1.00000,	4898.00,	-6.25493e-05,	4390.86,	4403.85,	Infinity,	11.5652),scalation.modeling.neuralnet.NeuralNet_2L@1e683a3e)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (29.329151476195765,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.750319,
 	2.24119,
 	-1.04606) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.294178,
 	0.293889,
 	9.64184,
 	6.80542,
 	0.00695140,
 	0.0833751,
 	0.0646827,
 	2.00000,
 	4896.00,
 	1020.30,
 	1048.24,
 	1062.90,
 	Infinity,
 	10.0732)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.9484945837292,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.824560,
 	2.34033,
 	-1.06012) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.228915,
 	0.228600,
 	9.30007,
 	7.17114,
 	0.00732497,
 	0.0855860,
 	0.0674855,
 	2.00000,
 	4896.00,
 	726.747,
 	1023.46,
 	1038.12,
 	10.6372,
 	10.3772)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.499073643575596,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.804513,
 	2.33496,
 	-1.12276) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.201155,
 	0.200829,
 	9.54819,
 	7.62752,
 	0.00779113,
 	0.0882674,
 	0.0681439,
 	2.00000,
 	4896.00,
 	616.426,
 	992.526,
 	1007.19,
 	10.9151,
 	10.5426)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.481117481188086,250)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.816285,
 	2.31819,
 	-1.01657) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.233413,
 	0.233100,
 	9.97311,
 	7.64526,
 	0.00780926,
 	0.0883700,
 	0.0696549,
 	2.00000,
 	4896.00,
 	745.375,
 	991.323,
 	1005.98,
 	11.3006,
 	10.8483)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.481117481188086,-3)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.816285,
 	2.31819,
 	-1.01657) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.258949,
 	0.258646,
 	9.31580,
 	6.90348,
 	0.00705157,
 	0.0839736,
 	0.0651442,
 	2.00000,
 	4896.00,
 	855.417,
 	1041.60,
 	1056.26,
 	10.2831,
 	10.0271)

stepRegressionAll: (l = 2) ADD variable BestStep(2,VectorD(0.244446,	0.244137,	47.8461,	36.1503,	0.00737912,	0.0859018,	0.0670094,	2.00000,	4896.00,	792.006,	5079.46,	5098.95,	Infinity,	10.3716),scalation.modeling.neuralnet.NeuralNet_2L@2b48a640)
-------------------------------------------------------------------------------------------------------------------------
| stepRegressionAll: (l = 2) ADD variable (2, volatile acidity) => cols = LinkedHashSet(0, 11, 2) @ 0.24413718264559836 |
-------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (36.00406809648639,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.14257092222632,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.36576085104916,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.12504071755746,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.686094160542545,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.09025540471866,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.18891275698405,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.14972410196512,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.01457581967583,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.601356238887476,400)
optimize2: bSize = 20, nB = 244
ending epoch = (46.130227218664416,400)
DEBUG @ PredictorMV.stepRegressionAll: bestf = BestStep(4,VectorD(0.260843,	0.260390,	47.8461,	35.3658,	0.00721898,	0.0849646,	0.0661730,	3.00000,	4895.00,	575.803,	5135.21,	5161.20,	Infinity,	10.2430),scalation.modeling.neuralnet.NeuralNet_2L@2053d869), bestb = BestStep(2,VectorD(0.193218,	0.193053,	47.8461,	38.6014,	0.00787944,	0.0887662,	0.0698125,	1.00000,	4897.00,	1172.79,	4916.77,	4929.76,	Infinity,	10.8414),scalation.modeling.neuralnet.NeuralNet_2L@7a419da4)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.655899472809242,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.02635,
 	2.53482,
 	-1.09817,
 	0.774648) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.318632,
 	0.318214,
 	9.64184,
 	6.56964,
 	0.00671056,
 	0.0819180,
 	0.0637192,
 	3.00000,
 	4895.00,
 	763.025,
 	1067.08,
 	1086.63,
 	Infinity,
 	9.92716)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.17585108159289,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.14010,
 	2.67825,
 	-1.12213,
 	0.853248) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.247392,
 	0.246931,
 	9.30007,
 	6.99930,
 	0.00714944,
 	0.0845544,
 	0.0668839,
 	3.00000,
 	4895.00,
 	536.350,
 	1037.32,
 	1056.87,
 	10.5557,
 	10.2935)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.83394091104317,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.11814,
 	2.67425,
 	-1.17977,
 	0.837104) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.229667,
 	0.229195,
 	9.54819,
 	7.35529,
 	0.00751306,
 	0.0866779,
 	0.0670725,
 	3.00000,
 	4895.00,
 	486.465,
 	1012.66,
 	1032.21,
 	10.7593,
 	10.3768)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.64849432417371,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.16353,
 	2.68600,
 	-1.07211,
 	0.914516) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.244694,
 	0.244231,
 	9.97311,
 	7.53276,
 	0.00769434,
 	0.0877174,
 	0.0688849,
 	3.00000,
 	4895.00,
 	528.605,
 	1000.37,
 	1019.92,
 	11.1527,
 	10.7249)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.381288920067846,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.14816,
 	2.67217,
 	-1.13577,
 	0.936664) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.269844,
 	0.269397,
 	9.31580,
 	6.80199,
 	0.00694789,
 	0.0833540,
 	0.0644691,
 	3.00000,
 	4895.00,
 	603.016,
 	1050.99,
 	1070.53,
 	10.1269,
 	9.91345)

stepRegressionAll: (l = 3) ADD variable BestStep(4,VectorD(0.260843,	0.260390,	47.8461,	35.3658,	0.00721898,	0.0849646,	0.0661730,	3.00000,	4895.00,	575.803,	5135.21,	5161.20,	Infinity,	10.2430),scalation.modeling.neuralnet.NeuralNet_2L@2053d869)
--------------------------------------------------------------------------------------------------------------------------
| stepRegressionAll: (l = 3) ADD variable (4, residual sugar) => cols = LinkedHashSet(0, 11, 2, 4) @ 0.26039009328451834 |
--------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (35.18094079920835,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.35468377503292,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.41280220749583,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.13996079956057,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.40966379676065,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.38759010805491,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.40543426088116,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.271288958630876,400)
optimize2: bSize = 20, nB = 244
ending epoch = (38.10217733105182,400)
optimize2: bSize = 20, nB = 244
ending epoch = (36.14077502577134,400)
optimize2: bSize = 20, nB = 244
ending epoch = (45.793477757145986,400)
DEBUG @ PredictorMV.stepRegressionAll: bestf = BestStep(6,VectorD(0.265562,	0.264962,	47.8461,	35.1400,	0.00717288,	0.0846929,	0.0659280,	4.00000,	4894.00,	442.401,	5152.90,	5185.38,	Infinity,	10.2073),scalation.modeling.neuralnet.NeuralNet_2L@14555e0a), bestb = BestStep(4,VectorD(0.244645,	0.244336,	47.8461,	36.1408,	0.00737717,	0.0858905,	0.0669438,	2.00000,	4896.00,	792.860,	5080.11,	5099.60,	Infinity,	10.3616),scalation.modeling.neuralnet.NeuralNet_2L@4bb33f74)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.455534819541807,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.12127,
 	2.57421,
 	-1.06746,
 	0.673967,
 	0.530685) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.325349,
 	0.324797,
 	9.64184,
 	6.50488,
 	0.00664441,
 	0.0815132,
 	0.0633750,
 	4.00000,
 	4894.00,
 	590.030,
 	1073.81,
 	1098.25,
 	Infinity,
 	9.87850)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.957473870741616,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.24241,
 	2.72068,
 	-1.08803,
 	0.737845,
 	0.587051) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.251648,
 	0.251037,
 	9.30007,
 	6.95972,
 	0.00710901,
 	0.0843150,
 	0.0667419,
 	4.00000,
 	4894.00,
 	411.426,
 	1042.10,
 	1066.53,
 	10.5309,
 	10.2791)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.646421054976056,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.22442,
 	2.72081,
 	-1.14371,
 	0.723702,
 	0.577336) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.237402,
 	0.236779,
 	9.54819,
 	7.28143,
 	0.00743762,
 	0.0862416,
 	0.0663296,
 	4.00000,
 	4894.00,
 	380.885,
 	1019.67,
 	1044.10,
 	10.6317,
 	10.2598)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.47275880955678,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.25836,
 	2.72659,
 	-1.03858,
 	0.805042,
 	0.569439) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.252193,
 	0.251582,
 	9.97311,
 	7.45796,
 	0.00761794,
 	0.0872808,
 	0.0686246,
 	4.00000,
 	4894.00,
 	412.618,
 	1007.36,
 	1031.79,
 	11.1201,
 	10.6884)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.472189309752643,188)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.25918,
 	2.72579,
 	-1.03894,
 	0.804603,
 	0.569271) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.272892,
 	0.272298,
 	9.31580,
 	6.77359,
 	0.00691889,
 	0.0831799,
 	0.0645216,
 	4.00000,
 	4894.00,
 	459.195,
 	1055.08,
 	1079.51,
 	10.1700,
 	9.92477)

stepRegressionAll: (l = 4) ADD variable BestStep(6,VectorD(0.265562,	0.264962,	47.8461,	35.1400,	0.00717288,	0.0846929,	0.0659280,	4.00000,	4894.00,	442.401,	5152.90,	5185.38,	Infinity,	10.2073),scalation.modeling.neuralnet.NeuralNet_2L@14555e0a)
---------------------------------------------------------------------------------------------------------------------------------
| stepRegressionAll: (l = 4) ADD variable (6, free sulfur dioxide) => cols = LinkedHashSet(0, 11, 2, 4, 6) @ 0.2649621255186586 |
---------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.9744975975393,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.111309135621205,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.18331878291717,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.127148264420924,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.12303215327844,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.18168546289907,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.02753979507513,400)
optimize2: bSize = 20, nB = 244
ending epoch = (37.674628437555405,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.681721078722326,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.3680134233812,400)
optimize2: bSize = 20, nB = 244
ending epoch = (45.77906297906716,400)
DEBUG @ PredictorMV.stepRegressionAll: bestf = BestStep(1,VectorD(0.269021,	0.268274,	47.8461,	34.9745,	0.00713911,	0.0844933,	0.0657286,	5.00000,	4893.00,	360.152,	5166.46,	5205.44,	Infinity,	10.1755),scalation.modeling.neuralnet.NeuralNet_2L@759d26fb), bestb = BestStep(6,VectorD(0.260796,	0.260343,	47.8461,	35.3680,	0.00721944,	0.0849673,	0.0661633,	3.00000,	4895.00,	575.663,	5135.05,	5161.04,	Infinity,	10.2414),scalation.modeling.neuralnet.NeuralNet_2L@3c73951)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.282245965984202,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.849820,
 	2.54485,
 	-1.08067,
 	0.712009,
 	0.493270,
 	-0.524475) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.322490,
 	0.321797,
 	9.64184,
 	6.53244,
 	0.00667257,
 	0.0816858,
 	0.0633236,
 	5.00000,
 	4893.00,
 	465.806,
 	1074.05,
 	1103.37,
 	Infinity,
 	9.86247)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.845461240683026,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.00224,
 	2.69033,
 	-1.09987,
 	0.765888,
 	0.542585,
 	-0.440682) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.255549,
 	0.254789,
 	9.30007,
 	6.92344,
 	0.00707195,
 	0.0840949,
 	0.0665892,
 	5.00000,
 	4893.00,
 	335.926,
 	1046.66,
 	1075.98,
 	10.4969,
 	10.2588)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.544400325674193,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.01209,
 	2.69256,
 	-1.15010,
 	0.747933,
 	0.530318,
 	-0.388058) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.242464,
 	0.241690,
 	9.54819,
 	7.23309,
 	0.00738825,
 	0.0859549,
 	0.0659631,
 	5.00000,
 	4893.00,
 	313.221,
 	1024.96,
 	1054.28,
 	10.5660,
 	10.2026)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.33720458499281,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.03838,
 	2.70242,
 	-1.04977,
 	0.835882,
 	0.532712,
 	-0.421794) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.254474,
 	0.253712,
 	9.97311,
 	7.43521,
 	0.00759470,
 	0.0871476,
 	0.0686062,
 	5.00000,
 	4893.00,
 	334.031,
 	1010.80,
 	1040.12,
 	11.0927,
 	10.6850)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.058233851647085,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.05687,
 	2.69819,
 	-1.10116,
 	0.829470,
 	0.603155,
 	-0.355767) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.278722,
 	0.277985,
 	9.31580,
 	6.71929,
 	0.00686342,
 	0.0828457,
 	0.0641059,
 	5.00000,
 	4893.00,
 	378.158,
 	1060.96,
 	1090.28,
 	10.1000,
 	9.85872)

stepRegressionAll: (l = 5) ADD variable BestStep(1,VectorD(0.269021,	0.268274,	47.8461,	34.9745,	0.00713911,	0.0844933,	0.0657286,	5.00000,	4893.00,	360.152,	5166.46,	5205.44,	Infinity,	10.1755),scalation.modeling.neuralnet.NeuralNet_2L@759d26fb)
------------------------------------------------------------------------------------------------------------------------------
| stepRegressionAll: (l = 5) ADD variable (1, fixed acidity) => cols = LinkedHashSet(0, 11, 2, 4, 6, 1) @ 0.2682736764439455 |
------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.980261988550645,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.98605530404945,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.9681383168548,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.95403162003501,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.99104830354317,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.855579940370866,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.134074549292805,400)
optimize2: bSize = 20, nB = 244
ending epoch = (37.55793627111661,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.57450420698294,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.165321238069694,400)
optimize2: bSize = 20, nB = 244
ending epoch = (45.394476646829766,400)
DEBUG @ PredictorMV.stepRegressionAll: bestf = BestStep(10,VectorD(0.271506,	0.270613,	47.8461,	34.8556,	0.00711484,	0.0843495,	0.0655998,	6.00000,	4892.00,	303.871,	5176.80,	5222.28,	Infinity,	10.1579),scalation.modeling.neuralnet.NeuralNet_2L@3d5c822d), bestb = BestStep(1,VectorD(0.265685,	0.265085,	47.8461,	35.1341,	0.00717168,	0.0846858,	0.0659707,	4.00000,	4894.00,	442.680,	5153.31,	5185.79,	Infinity,	10.2143),scalation.modeling.neuralnet.NeuralNet_2L@6f46426d)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.19179622272498,380)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.926584,
 	2.53680,
 	-1.07590,
 	0.715054,
 	0.463695,
 	-0.531604,
 	0.197119) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.325731,
 	0.324904,
 	9.64184,
 	6.50119,
 	0.00664064,
 	0.0814901,
 	0.0631554,
 	6.00000,
 	4892.00,
 	393.878,
 	1078.34,
 	1112.55,
 	Infinity,
 	9.84139)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.740516329169534,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.09676,
 	2.67965,
 	-1.09303,
 	0.772607,
 	0.511896,
 	-0.446556,
 	0.220266) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.256628,
 	0.255716,
 	9.30007,
 	6.91341,
 	0.00706171,
 	0.0840340,
 	0.0665922,
 	6.00000,
 	4892.00,
 	281.470,
 	1049.37,
 	1083.58,
 	10.4692,
 	10.2655)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.431133653755257,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.11217,
 	2.68713,
 	-1.14181,
 	0.759918,
 	0.496679,
 	-0.394736,
 	0.231619) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.243826,
 	0.242899,
 	9.54819,
 	7.22009,
 	0.00737497,
 	0.0858776,
 	0.0657974,
 	6.00000,
 	4892.00,
 	262.902,
 	1027.82,
 	1062.02,
 	10.5341,
 	10.1782)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.21503741557072,150)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.12506,
 	2.68700,
 	-1.06307,
 	0.814099,
 	0.499958,
 	-0.410465,
 	0.234663) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.254987,
 	0.254073,
 	9.97311,
 	7.43010,
 	0.00758948,
 	0.0871176,
 	0.0683477,
 	6.00000,
 	4892.00,
 	279.054,
 	1013.06,
 	1047.27,
 	11.0734,
 	10.6470)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.21503741557072,-3)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.12506,
 	2.68700,
 	-1.06307,
 	0.814099,
 	0.499958,
 	-0.410465,
 	0.234663) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.287166,
 	0.286292,
 	9.31580,
 	6.64062,
 	0.00678307,
 	0.0823594,
 	0.0637348,
 	6.00000,
 	4892.00,
 	328.458,
 	1068.54,
 	1102.75,
 	10.0355,
 	9.80308)

stepRegressionAll: (l = 6) ADD variable BestStep(10,VectorD(0.271506,	0.270613,	47.8461,	34.8556,	0.00711484,	0.0843495,	0.0655998,	6.00000,	4892.00,	303.871,	5176.80,	5222.28,	Infinity,	10.1579),scalation.modeling.neuralnet.NeuralNet_2L@3d5c822d)
--------------------------------------------------------------------------------------------------------------------------------
| stepRegressionAll: (l = 6) ADD variable (10, sulphates) => cols = LinkedHashSet(0, 11, 2, 4, 6, 1, 10) @ 0.27061256974313075 |
--------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.85883420463472,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.86043316860547,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.827663665066524,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.834339469630166,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.85197629602824,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.0295169229905,400)
optimize2: bSize = 20, nB = 244
ending epoch = (37.40403447664617,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.48009801331901,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.03848744453312,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.96564100807207,400)
optimize2: bSize = 20, nB = 244
ending epoch = (45.286963257108695,400)
DEBUG @ PredictorMV.stepRegressionAll: bestf = BestStep(7,VectorD(0.272090,	0.271048,	47.8461,	34.8277,	0.00710914,	0.0843157,	0.0655356,	7.00000,	4891.00,	261.176,	5180.76,	5232.74,	Infinity,	10.1478),scalation.modeling.neuralnet.NeuralNet_2L@73700b80), bestb = BestStep(10,VectorD(0.269206,	0.268459,	47.8461,	34.9656,	0.00713730,	0.0844826,	0.0657663,	5.00000,	4893.00,	360.491,	5167.08,	5206.06,	Infinity,	10.1816),scalation.modeling.neuralnet.NeuralNet_2L@49c7b90e)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.156889683153263,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.871690,
 	2.48064,
 	-1.04180,
 	0.753142,
 	0.646142,
 	-0.503608,
 	0.221986,
 	-0.212148) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.324416,
 	0.323449,
 	9.64184,
 	6.51387,
 	0.00665360,
 	0.0815696,
 	0.0632655,
 	7.00000,
 	4891.00,
 	335.523,
 	1079.48,
 	1118.57,
 	Infinity,
 	9.85557)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.72192920472739,319)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.02460,
 	2.60775,
 	-1.06030,
 	0.786707,
 	0.671732,
 	-0.436932,
 	0.237312,
 	-0.173092) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.258878,
 	0.257817,
 	9.30007,
 	6.89249,
 	0.00704033,
 	0.0839067,
 	0.0663995,
 	7.00000,
 	4891.00,
 	244.064,
 	1052.85,
 	1091.94,
 	10.4580,
 	10.2335)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.418731918095812,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.06278,
 	2.63106,
 	-1.11485,
 	0.777214,
 	0.644930,
 	-0.380117,
 	0.247284,
 	-0.163484) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.245170,
 	0.244089,
 	9.54819,
 	7.20726,
 	0.00736186,
 	0.0858013,
 	0.0657172,
 	7.00000,
 	4891.00,
 	226.943,
 	1030.71,
 	1069.80,
 	10.5094,
 	10.1667)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.20918054743118,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.10666,
 	2.66563,
 	-1.01851,
 	0.859992,
 	0.620709,
 	-0.406220,
 	0.251672,
 	-0.119127) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.254816,
 	0.253750,
 	9.97311,
 	7.43180,
 	0.00759122,
 	0.0871276,
 	0.0684003,
 	7.00000,
 	4891.00,
 	238.926,
 	1014.92,
 	1054.01,
 	11.1044,
 	10.6571)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.203299875703134,244)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-1.10855,
 	2.66259,
 	-1.01923,
 	0.858566,
 	0.621267,
 	-0.407429,
 	0.250566,
 	-0.120430) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.285814,
 	0.284792,
 	9.31580,
 	6.65322,
 	0.00679593,
 	0.0824374,
 	0.0637533,
 	7.00000,
 	4891.00,
 	279.623,
 	1069.68,
 	1108.77,
 	10.0383,
 	9.80665)

stepRegressionAll: (l = 7) ADD variable BestStep(7,VectorD(0.272090,	0.271048,	47.8461,	34.8277,	0.00710914,	0.0843157,	0.0655356,	7.00000,	4891.00,	261.176,	5180.76,	5232.74,	Infinity,	10.1478),scalation.modeling.neuralnet.NeuralNet_2L@73700b80)
---------------------------------------------------------------------------------------------------------------------------------------------
| stepRegressionAll: (l = 7) ADD variable (7, total sulfur dioxide) => cols = LinkedHashSet(0, 11, 2, 4, 6, 1, 10, 7) @ 0.27104773632311563 |
---------------------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.83440196951081,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.83284621664651,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.80456314801898,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.82214516062956,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.98872152827131,400)
optimize2: bSize = 20, nB = 244
ending epoch = (37.14199834184435,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.48453037884218,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.060408121645665,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.88263458759792,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.96347781681106,400)
optimize2: bSize = 20, nB = 244
ending epoch = (43.89501700062164,400)
DEBUG @ PredictorMV.stepRegressionAll: bestf = BestStep(8,VectorD(0.272572,	0.271382,	47.8461,	34.8046,	0.00710442,	0.0842877,	0.0655425,	8.00000,	4890.00,	229.040,	5184.39,	5242.86,	Infinity,	10.1479),scalation.modeling.neuralnet.NeuralNet_2L@10d307f1), bestb = BestStep(7,VectorD(0.270941,	0.270046,	47.8461,	34.8826,	0.00712036,	0.0843822,	0.0657320,	6.00000,	4892.00,	303.003,	5174.90,	5220.38,	Infinity,	10.1789),scalation.modeling.neuralnet.NeuralNet_2L@4d5b6aac)
DEBUG @ PredictorMV.crossValidate: fold 0: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.13959683144135,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.610181,
 	2.51110,
 	-1.04040,
 	0.773041,
 	0.650162,
 	-0.471358,
 	0.228275,
 	-0.199612,
 	-0.331233) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 0: qof = 
MatrixD(0.321414,
 	0.320304,
 	9.64184,
 	6.54281,
 	0.00668316,
 	0.0817506,
 	0.0632342,
 	8.00000,
 	4890.00,
 	289.520,
 	1079.46,
 	1123.44,
 	Infinity,
 	9.84107)
DEBUG @ PredictorMV.crossValidate: fold 1: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.76394295887397,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.764725,
 	2.65058,
 	-1.05909,
 	0.812022,
 	0.677064,
 	-0.399655,
 	0.244925,
 	-0.156557,
 	-0.325762) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 1: qof = 
MatrixD(0.258325,
 	0.257112,
 	9.30007,
 	6.89763,
 	0.00704559,
 	0.0839380,
 	0.0665052,
 	8.00000,
 	4890.00,
 	212.898,
 	1054.49,
 	1098.47,
 	10.5088,
 	10.2482)
DEBUG @ PredictorMV.crossValidate: fold 2: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.48133491335628,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.836495,
 	2.63448,
 	-1.11660,
 	0.788194,
 	0.643723,
 	-0.371290,
 	0.246955,
 	-0.161208,
 	-0.253596) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 2: qof = 
MatrixD(0.245056,
 	0.243821,
 	9.54819,
 	7.20835,
 	0.00736297,
 	0.0858078,
 	0.0656413,
 	8.00000,
 	4890.00,
 	198.413,
 	1032.62,
 	1076.60,
 	10.4659,
 	10.1546)
DEBUG @ PredictorMV.crossValidate: fold 3: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.22851415850138,185)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.872272,
 	2.64352,
 	-1.03300,
 	0.842072,
 	0.634883,
 	-0.393519,
 	0.248174,
 	-0.126361,
 	-0.232643) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 3: qof = 
MatrixD(0.257082,
 	0.255866,
 	9.97311,
 	7.40921,
 	0.00756814,
 	0.0869951,
 	0.0682270,
 	8.00000,
 	4890.00,
 	211.519,
 	1018.48,
 	1062.46,
 	11.0535,
 	10.6294)
DEBUG @ PredictorMV.crossValidate: fold 4: test set size = 979
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (27.22851415850138,-3)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.872272,
 	2.64352,
 	-1.03300,
 	0.842072,
 	0.634883,
 	-0.393519,
 	0.248174,
 	-0.126361,
 	-0.232643) 
 b.b = null
DEBUG @ PredictorMV.crossValidate: fold 4: qof = 
MatrixD(0.285677,
 	0.284509,
 	9.31580,
 	6.65449,
 	0.00679723,
 	0.0824453,
 	0.0637352,
 	8.00000,
 	4890.00,
 	244.456,
 	1071.60,
 	1115.58,
 	10.0353,
 	9.80391)

stepRegressionAll: (l = 8) ADD variable BestStep(8,VectorD(0.272572,	0.271382,	47.8461,	34.8046,	0.00710442,	0.0842877,	0.0655425,	8.00000,	4890.00,	229.040,	5184.39,	5242.86,	Infinity,	10.1479),scalation.modeling.neuralnet.NeuralNet_2L@10d307f1)
----------------------------------------------------------------------------------------------------------------------------------
| stepRegressionAll: (l = 8) ADD variable (8, density) => cols = LinkedHashSet(0, 11, 2, 4, 6, 1, 10, 7, 8) @ 0.2713822651716773 |
----------------------------------------------------------------------------------------------------------------------------------
optimize2: bSize = 20, nB = 244
ending epoch = (34.8195764208163,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.81656239553375,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.807945157649854,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.95545640378455,400)
optimize2: bSize = 20, nB = 244
ending epoch = (37.10370494637684,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.48345910143884,400)
optimize2: bSize = 20, nB = 244
ending epoch = (35.079294187181105,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.84377551394013,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.83075813283467,400)
optimize2: bSize = 20, nB = 244
ending epoch = (34.939674303904795,400)
optimize2: bSize = 20, nB = 244
ending epoch = (43.76001696407923,400)
DEBUG @ PredictorMV.stepRegressionAll: bestf = BestStep(9,VectorD(0.272502,	0.271162,	47.8461,	34.8079,	0.00710511,	0.0842918,	0.0655701,	9.00000,	4889.00,	203.477,	5186.15,	5251.12,	Infinity,	10.1524),scalation.modeling.neuralnet.NeuralNet_2L@3e84448c), bestb = BestStep(8,VectorD(0.272025,	0.270983,	47.8461,	34.8308,	0.00710977,	0.0843194,	0.0655149,	7.00000,	4891.00,	261.091,	5180.55,	5232.52,	Infinity,	10.1444),scalation.modeling.neuralnet.NeuralNet_2L@4a7f959b)
stepRegressionAll: selected features = LinkedHashSet(0, 11, 2, 4, 6, 1, 10, 7, 8)
stepRegressionAll: selected features = LinkedHashSet(intercept, alcohol, volatile acidity, residual sugar, free sulfur dioxide, fixed acidity, sulphates, total sulfur dioxide, density)
stepRegressionAll: features in/out   = ArrayBuffer(11, 2, 4, 6, 1, 10, 7, 8)
k = 9, n = 12
Run + title
x-axis: minX = 0.0, maxX = 8.0
y-axis: minY = 19.0, maxY = 28.0
Stepwise: rSq = 
MatrixD(19.3295,	19.3130,	19.2722,
 	24.4446,	24.4137,	24.3322,
 	26.0843,	26.0390,	26.2046,
 	26.5562,	26.4962,	26.7897,
 	26.9021,	26.8274,	27.0740,
 	27.1506,	27.0613,	27.3668,
 	27.2090,	27.1048,	27.3819,
 	27.2572,	27.1382,	27.3511)
-------------------------------------
| Wine Quality NeuralNet_2L with id |
-------------------------------------
auto_optimize: etaI = (0.025,0.4)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.025, result = (8676.37741289405,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0484375, result = (8676.37741289405,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.071875, result = (8676.37741289405,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0953125, result = (8676.37741289405,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.11875, result = (8676.37741289405,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1421875, result = (8676.37741289405,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.165625, result = (8676.37741289405,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1890625, result = (7437.904422472563,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2125, result = (7437.904422472563,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2359375, result = (7437.904422472563,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.259375, result = (7437.904422472563,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2828125, result = (4857.5928046588815,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.30625, result = (4857.5928046588815,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3296875, result = (4857.5928046588815,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.353125, result = (4857.5928046588815,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3765625, result = (3335.882105135888,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.4, result = (3335.882105135888,2)
ending epoch = (3335.882105135888,2)

REPORT
    ----------------------------------------------------------------------------
    modelName  mn  = NeuralNet_2L_id
    ----------------------------------------------------------------------------
    hparameter hp  = HyperParameter (HashMap(lambda -> (0.01,0.01), maxEpochs -> (400,400), eta -> (0.1,0.1), nu -> (0.9,0.9), upLimit -> (4,4), beta -> (0.9,0.9), bSize -> (20,20)))
    ----------------------------------------------------------------------------
    features   fn  = Array(intercept, fixed acidity, volatile acidity, citric acid, residual sugar, chlorides, free sulfur dioxide, total sulfur dioxide, density, pH, sulphates, alcohol)
    ----------------------------------------------------------------------------
    parameter  bb  = Array(b.w = 
MatrixD(5.88911,
 	-0.0311622,
 	-0.133372,
 	0.0130454,
 	0.142980,
 	0.0788609,
 	0.119303,
 	0.00422495,
 	-0.256295,
 	-0.0377980,
 	0.179345,
 	0.514133) 
 b.b = null)
    ----------------------------------------------------------------------------
    fitMap     qof = 
		rSq 	 -> VectorD(0.139245) 
		rSqBar 	 -> VectorD(0.137308) 
		sst 	 -> VectorD(3875.53) 
		sse 	 -> VectorD(3335.88) 
		mse0 	 -> VectorD(0.680931) 
		rmse 	 -> VectorD(0.825186) 
		mae 	 -> VectorD(0.609878) 
		dfm 	 -> VectorD(11.0000) 
		df 	 -> VectorD(4887.00) 
		fStat 	 -> VectorD(71.8706) 
		aic 	 -> VectorD(-5986.05) 
		bic 	 -> VectorD(-5908.09) 
		mape 	 -> VectorD(Infinity) 
		smape 	 -> VectorD(10.4340) 

    ----------------------------------------------------------------------------
        
Run + title
--------------------------------
| Wine Quality Validation Test |
--------------------------------
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (2304.724568939998,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(5.88911,
 	-0.0311622,
 	-0.133372,
 	0.0130454,
 	0.142980,
 	0.0788609,
 	0.119303,
 	0.00422495,
 	-0.256295,
 	-0.0377980,
 	0.179345,
 	0.514133) 
 b.b = null
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative

		rSq 	 -> VectorD(-10.1864) 
		rSqBar 	 -> VectorD(-10.2116) 
		sst 	 -> VectorD(780.989) 
		sse 	 -> VectorD(8736.49) 
		mse0 	 -> VectorD(8.92389) 
		rmse 	 -> VectorD(2.98729) 
		mae 	 -> VectorD(0.663788) 
		dfm 	 -> VectorD(11.0000) 
		df 	 -> VectorD(4887.00) 
		fStat 	 -> VectorD(-404.557) 
		aic 	 -> VectorD(-7103.97) 
		bic 	 -> VectorD(-7045.33) 
		mape 	 -> VectorD(Infinity) 
		smape 	 -> VectorD(9.93464) 

---------------------------------------
| Wine Quality NeuralNet_2L with reLU |
---------------------------------------
auto_optimize: etaI = (0.025,0.4)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.025, result = (2798.64944112417,314)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0484375, result = (2798.64944112417,-3)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.071875, result = (2871.59123297709,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0953125, result = (2798.64944112417,58)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.11875, result = (2845.340179563496,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1421875, result = (2955.6972805903793,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.165625, result = (4480.933895442606,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1890625, result = (2798.64944112417,348)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2125, result = (3091.3407409890387,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2359375, result = (3920.342277470001,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.259375, result = (2798.64944112417,213)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2828125, result = (3181.1593170351616,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.30625, result = (6518.221769782383,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3296875, result = (2978.440186398637,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.353125, result = (2798.64944112417,259)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3765625, result = (8850.400976140145,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.4, result = (3420.439106960177,400)
ending epoch = (2798.64944112417,314)

REPORT
    ----------------------------------------------------------------------------
    modelName  mn  = NeuralNet_2L_reLU
    ----------------------------------------------------------------------------
    hparameter hp  = HyperParameter (HashMap(lambda -> (0.01,0.01), maxEpochs -> (400,400), eta -> (0.1,0.1), nu -> (0.9,0.9), upLimit -> (4,4), beta -> (0.9,0.9), bSize -> (20,20)))
    ----------------------------------------------------------------------------
    features   fn  = Array(intercept, fixed acidity, volatile acidity, citric acid, residual sugar, chlorides, free sulfur dioxide, total sulfur dioxide, density, pH, sulphates, alcohol)
    ----------------------------------------------------------------------------
    parameter  bb  = Array(b.w = 
MatrixD(5.87544,
 	-0.0418987,
 	-0.200297,
 	-0.00984006,
 	0.108849,
 	-0.0215690,
 	0.0838061,
 	-0.0329423,
 	0.0668443,
 	0.0222752,
 	0.0613307,
 	0.462141) 
 b.b = null)
    ----------------------------------------------------------------------------
    fitMap     qof = 
		rSq 	 -> VectorD(0.277867) 
		rSqBar 	 -> VectorD(0.276242) 
		sst 	 -> VectorD(3875.53) 
		sse 	 -> VectorD(2798.65) 
		mse0 	 -> VectorD(0.571270) 
		rmse 	 -> VectorD(0.755824) 
		mae 	 -> VectorD(0.586712) 
		dfm 	 -> VectorD(11.0000) 
		df 	 -> VectorD(4887.00) 
		fStat 	 -> VectorD(170.950) 
		aic 	 -> VectorD(-5555.92) 
		bic 	 -> VectorD(-5477.96) 
		mape 	 -> VectorD(NaN) 
		smape 	 -> VectorD(NaN) 

    ----------------------------------------------------------------------------
        
Run + title
--------------------------------
| Wine Quality Validation Test |
--------------------------------
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (2363.9465370221415,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(5.85532,
 	-0.116514,
 	-0.273169,
 	0.0233769,
 	-0.273272,
 	-0.142611,
 	0.0418129,
 	-0.289085,
 	3.70857,
 	-0.100734,
 	0.0637737,
 	0.667879) 
 b.b = null
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative

		rSq 	 -> VectorD(-10.3838) 
		rSqBar 	 -> VectorD(-10.4094) 
		sst 	 -> VectorD(780.989) 
		sse 	 -> VectorD(8890.62) 
		mse0 	 -> VectorD(9.08132) 
		rmse 	 -> VectorD(3.01352) 
		mae 	 -> VectorD(0.672562) 
		dfm 	 -> VectorD(11.0000) 
		df 	 -> VectorD(4887.00) 
		fStat 	 -> VectorD(-405.246) 
		aic 	 -> VectorD(-8383.03) 
		bic 	 -> VectorD(-8324.40) 
		mape 	 -> VectorD(Infinity) 
		smape 	 -> VectorD(10.0685) 

----------------------------------------
| Wine Quality NeuralNet_2L with lreLU |
----------------------------------------
auto_optimize: etaI = (0.025,0.4)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.025, result = (2803.103057251815,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0484375, result = (2798.1416869154646,101)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.071875, result = (2798.1416869154646,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0953125, result = (2798.1416869154646,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.11875, result = (2798.1416869154646,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1421875, result = (2798.1416869154646,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.165625, result = (2798.1416869154646,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1890625, result = (2798.1416869154646,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2125, result = (2798.1416869154646,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2359375, result = (2798.1416869154646,5)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.259375, result = (2798.1416869154646,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2828125, result = (2798.1416869154646,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.30625, result = (2798.1416869154646,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3296875, result = (2798.1416869154646,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.353125, result = (2798.1416869154646,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3765625, result = (2798.1416869154646,2)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.4, result = (2798.1416869154646,2)
ending epoch = (2798.1416869154646,101)

REPORT
    ----------------------------------------------------------------------------
    modelName  mn  = NeuralNet_2L_lreLU
    ----------------------------------------------------------------------------
    hparameter hp  = HyperParameter (HashMap(lambda -> (0.01,0.01), maxEpochs -> (400,400), eta -> (0.1,0.1), nu -> (0.9,0.9), upLimit -> (4,4), beta -> (0.9,0.9), bSize -> (20,20)))
    ----------------------------------------------------------------------------
    features   fn  = Array(intercept, fixed acidity, volatile acidity, citric acid, residual sugar, chlorides, free sulfur dioxide, total sulfur dioxide, density, pH, sulphates, alcohol)
    ----------------------------------------------------------------------------
    parameter  bb  = Array(b.w = 
MatrixD(5.87641,
 	-0.0531511,
 	-0.190291,
 	0.00707172,
 	0.122811,
 	-0.00957198,
 	0.0944783,
 	-0.0340082,
 	0.0294116,
 	0.0147452,
 	0.0466947,
 	0.466133) 
 b.b = null)
    ----------------------------------------------------------------------------
    fitMap     qof = 
		rSq 	 -> VectorD(0.277998) 
		rSqBar 	 -> VectorD(0.276373) 
		sst 	 -> VectorD(3875.53) 
		sse 	 -> VectorD(2798.14) 
		mse0 	 -> VectorD(0.571166) 
		rmse 	 -> VectorD(0.755755) 
		mae 	 -> VectorD(0.587811) 
		dfm 	 -> VectorD(11.0000) 
		df 	 -> VectorD(4887.00) 
		fStat 	 -> VectorD(171.062) 
		aic 	 -> VectorD(-5555.47) 
		bic 	 -> VectorD(-5477.51) 
		mape 	 -> VectorD(Infinity) 
		smape 	 -> VectorD(10.1230) 

    ----------------------------------------------------------------------------
        
Run + title
--------------------------------
| Wine Quality Validation Test |
--------------------------------
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (2328.2856977401566,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(5.87641,
 	-0.0531511,
 	-0.190291,
 	0.00707172,
 	0.122811,
 	-0.00957198,
 	0.0944783,
 	-0.0340082,
 	0.0294116,
 	0.0147452,
 	0.0466947,
 	0.466133) 
 b.b = null
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative

		rSq 	 -> VectorD(-9.65332) 
		rSqBar 	 -> VectorD(-9.67730) 
		sst 	 -> VectorD(780.989) 
		sse 	 -> VectorD(8320.13) 
		mse0 	 -> VectorD(8.49860) 
		rmse 	 -> VectorD(2.91524) 
		mae 	 -> VectorD(0.661540) 
		dfm 	 -> VectorD(11.0000) 
		df 	 -> VectorD(4887.00) 
		fStat 	 -> VectorD(-402.570) 
		aic 	 -> VectorD(-7884.94) 
		bic 	 -> VectorD(-7826.31) 
		mape 	 -> VectorD(Infinity) 
		smape 	 -> VectorD(9.94886) 

--------------------------------------
| Wine Quality NeuralNet_2L with eLU |
--------------------------------------
auto_optimize: etaI = (0.025,0.4)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.025, result = (2831.3966903121886,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0484375, result = (2846.2155807106246,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.071875, result = (2800.9289530948945,114)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0953125, result = (3039.493620499811,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.11875, result = (2800.9289530948945,147)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1421875, result = (2800.9289530948945,95)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.165625, result = (2800.9289530948945,270)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1890625, result = (3309.8982646577306,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2125, result = (2800.9289530948945,140)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2359375, result = (2800.9289530948945,147)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.259375, result = (2800.9289530948945,37)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2828125, result = (2800.9289530948945,364)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.30625, result = (5474.301378542337,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3296875, result = (3301.6373241030096,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.353125, result = (2800.9289530948945,266)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3765625, result = (2800.9289530948945,27)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.4, result = (2800.9289530948945,257)
ending epoch = (2800.9289530948945,114)

REPORT
    ----------------------------------------------------------------------------
    modelName  mn  = NeuralNet_2L_eLU
    ----------------------------------------------------------------------------
    hparameter hp  = HyperParameter (HashMap(lambda -> (0.01,0.01), maxEpochs -> (400,400), eta -> (0.1,0.1), nu -> (0.9,0.9), upLimit -> (4,4), beta -> (0.9,0.9), bSize -> (20,20)))
    ----------------------------------------------------------------------------
    features   fn  = Array(intercept, fixed acidity, volatile acidity, citric acid, residual sugar, chlorides, free sulfur dioxide, total sulfur dioxide, density, pH, sulphates, alcohol)
    ----------------------------------------------------------------------------
    parameter  bb  = Array(b.w = 
MatrixD(5.87294,
 	-0.0484060,
 	-0.194324,
 	-0.0149887,
 	0.0944413,
 	-0.0131225,
 	0.0901669,
 	-0.0231638,
 	0.0344441,
 	0.0191663,
 	0.0363883,
 	0.450710) 
 b.b = null)
    ----------------------------------------------------------------------------
    fitMap     qof = 
		rSq 	 -> VectorD(0.277279) 
		rSqBar 	 -> VectorD(0.275652) 
		sst 	 -> VectorD(3875.53) 
		sse 	 -> VectorD(2800.93) 
		mse0 	 -> VectorD(0.571735) 
		rmse 	 -> VectorD(0.756131) 
		mae 	 -> VectorD(0.587726) 
		dfm 	 -> VectorD(11.0000) 
		df 	 -> VectorD(4887.00) 
		fStat 	 -> VectorD(170.450) 
		aic 	 -> VectorD(-5557.91) 
		bic 	 -> VectorD(-5479.95) 
		mape 	 -> VectorD(Infinity) 
		smape 	 -> VectorD(10.1231) 

    ----------------------------------------------------------------------------
        
Run + title
--------------------------------
| Wine Quality Validation Test |
--------------------------------
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (2269.148327331275,213)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(5.87294,
 	-0.0484060,
 	-0.194324,
 	-0.0149887,
 	0.0944413,
 	-0.0131225,
 	0.0901669,
 	-0.0231638,
 	0.0344441,
 	0.0191663,
 	0.0363883,
 	0.450710) 
 b.b = null
ERROR @ CDF.fisherCDF: coordinate x should be nonnegative

		rSq 	 -> VectorD(-9.48361) 
		rSqBar 	 -> VectorD(-9.50720) 
		sst 	 -> VectorD(780.989) 
		sse 	 -> VectorD(8187.58) 
		mse0 	 -> VectorD(8.36321) 
		rmse 	 -> VectorD(2.89192) 
		mae 	 -> VectorD(0.653662) 
		dfm 	 -> VectorD(11.0000) 
		df 	 -> VectorD(4887.00) 
		fStat 	 -> VectorD(-401.895) 
		aic 	 -> VectorD(-7762.43) 
		bic 	 -> VectorD(-7703.79) 
		mape 	 -> VectorD(Infinity) 
		smape 	 -> VectorD(9.82172) 

---------------------------------------
| Wine Quality NeuralNet_2L with tanh |
---------------------------------------
auto_optimize: etaI = (0.025,0.4)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.025, result = (138.2146020894724,117)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0484375, result = (138.2146020894724,-3)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.071875, result = (138.25132143700782,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0953125, result = (138.16602404275434,106)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.11875, result = (138.16602404275434,-3)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1421875, result = (143.01905901884925,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.165625, result = (142.713665404539,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1890625, result = (138.39202026605895,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2125, result = (140.34808878851533,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2359375, result = (138.1981039515893,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.259375, result = (138.92461332166624,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2828125, result = (139.08792727703627,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.30625, result = (138.15912111587085,262)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3296875, result = (138.3083881008085,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.353125, result = (140.2120701035392,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3765625, result = (140.2735915742177,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.4, result = (138.15912111587085,247)
ending epoch = (138.15912111587085,262)

REPORT
    ----------------------------------------------------------------------------
    modelName  mn  = NeuralNet_2L_tanh
    ----------------------------------------------------------------------------
    hparameter hp  = HyperParameter (HashMap(lambda -> (0.01,0.01), maxEpochs -> (400,400), eta -> (0.1,0.1), nu -> (0.9,0.9), upLimit -> (4,4), beta -> (0.9,0.9), bSize -> (20,20)))
    ----------------------------------------------------------------------------
    features   fn  = Array(intercept, fixed acidity, volatile acidity, citric acid, residual sugar, chlorides, free sulfur dioxide, total sulfur dioxide, density, pH, sulphates, alcohol)
    ----------------------------------------------------------------------------
    parameter  bb  = Array(b.w = 
MatrixD(-0.179693,
 	-0.0930275,
 	-0.267887,
 	-0.00690692,
 	0.200230,
 	-0.0280193,
 	0.172167,
 	-0.0452644,
 	0.315372,
 	0.0261265,
 	0.0559601,
 	0.653553) 
 b.b = null)
    ----------------------------------------------------------------------------
    fitMap     qof = 
		rSq 	 -> VectorD(0.278106) 
		rSqBar 	 -> VectorD(0.276481) 
		sst 	 -> VectorD(191.384) 
		sse 	 -> VectorD(138.159) 
		mse0 	 -> VectorD(0.0282015) 
		rmse 	 -> VectorD(0.167933) 
		mae 	 -> VectorD(0.130482) 
		dfm 	 -> VectorD(11.0000) 
		df 	 -> VectorD(4887.00) 
		fStat 	 -> VectorD(171.154) 
		aic 	 -> VectorD(1813.37) 
		bic 	 -> VectorD(1891.33) 
		mape 	 -> VectorD(63.2534) 
		smape 	 -> VectorD(48.5062) 

    ----------------------------------------------------------------------------
        
Run + title
--------------------------------
| Wine Quality Validation Test |
--------------------------------
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (112.99473618433535,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.179693,
 	-0.0930275,
 	-0.267887,
 	-0.00690692,
 	0.200230,
 	-0.0280193,
 	0.172167,
 	-0.0452644,
 	0.315372,
 	0.0261265,
 	0.0559601,
 	0.653553) 
 b.b = null

		rSq 	 -> VectorD(0.326915) 
		rSqBar 	 -> VectorD(0.325400) 
		sst 	 -> VectorD(38.5673) 
		sse 	 -> VectorD(25.9591) 
		mse0 	 -> VectorD(0.0265159) 
		rmse 	 -> VectorD(0.162837) 
		mae 	 -> VectorD(0.125936) 
		dfm 	 -> VectorD(11.0000) 
		df 	 -> VectorD(4887.00) 
		fStat 	 -> VectorD(215.782) 
		aic 	 -> VectorD(410.839) 
		bic 	 -> VectorD(469.477) 
		mape 	 -> VectorD(57.7240) 
		smape 	 -> VectorD(46.4506) 

------------------------------------------
| Wine Quality NeuralNet_2L with sigmoid |
------------------------------------------
auto_optimize: etaI = (0.025,0.4)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.025, result = (37.17947340793386,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0484375, result = (35.66121934174339,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.071875, result = (35.11477848202532,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.0953125, result = (34.873089905443415,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.11875, result = (34.75917760708676,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1421875, result = (34.69834747236153,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.165625, result = (34.76048600669331,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.1890625, result = (34.68610405866173,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2125, result = (34.65904112539431,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2359375, result = (34.64835101125422,400)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.259375, result = (34.621343248841654,278)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.2828125, result = (34.621343248841654,-3)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.30625, result = (34.621343248841654,-3)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3296875, result = (34.60676054040345,366)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.353125, result = (34.60676054040345,-3)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.3765625, result = (34.60676054040345,-3)
optimize2: bSize = 20, nB = 244
auto_optimize: eta = 0.4, result = (34.838505434573726,400)
ending epoch = (34.60676054040345,366)

REPORT
    ----------------------------------------------------------------------------
    modelName  mn  = NeuralNet_2L_sigmoid
    ----------------------------------------------------------------------------
    hparameter hp  = HyperParameter (HashMap(lambda -> (0.01,0.01), maxEpochs -> (400,400), eta -> (0.1,0.1), nu -> (0.9,0.9), upLimit -> (4,4), beta -> (0.9,0.9), bSize -> (20,20)))
    ----------------------------------------------------------------------------
    features   fn  = Array(intercept, fixed acidity, volatile acidity, citric acid, residual sugar, chlorides, free sulfur dioxide, total sulfur dioxide, density, pH, sulphates, alcohol)
    ----------------------------------------------------------------------------
    parameter  bb  = Array(b.w = 
MatrixD(-0.842693,
 	-0.376252,
 	-1.05117,
 	-0.0257426,
 	0.812990,
 	-0.136964,
 	0.685967,
 	-0.172693,
 	-0.249656,
 	0.0961440,
 	0.229585,
 	2.56721) 
 b.b = null)
    ----------------------------------------------------------------------------
    fitMap     qof = 
		rSq 	 -> VectorD(0.276706) 
		rSqBar 	 -> VectorD(0.275078) 
		sst 	 -> VectorD(47.8461) 
		sse 	 -> VectorD(34.6068) 
		mse0 	 -> VectorD(0.00706405) 
		rmse 	 -> VectorD(0.0840479) 
		mae 	 -> VectorD(0.0652823) 
		dfm 	 -> VectorD(11.0000) 
		df 	 -> VectorD(4887.00) 
		fStat 	 -> VectorD(169.963) 
		aic 	 -> VectorD(5204.35) 
		bic 	 -> VectorD(5282.31) 
		mape 	 -> VectorD(Infinity) 
		smape 	 -> VectorD(10.1086) 

    ----------------------------------------------------------------------------
        
Run + title
--------------------------------
| Wine Quality Validation Test |
--------------------------------
DEBUG @ PredictorMV.validate: test set size = 979
optimize2: bSize = 20, nB = 196
ending epoch = (28.104632990676738,400)
DEBUG @ PredictorMV.validate: parameters b = b.w = 
MatrixD(-0.942045,
 	-0.359843,
 	-1.05614,
 	-0.0327564,
 	0.828873,
 	-0.119377,
 	0.688102,
 	-0.177164,
 	-0.219027,
 	0.119035,
 	0.226418,
 	2.58304) 
 b.b = null

		rSq 	 -> VectorD(0.324376) 
		rSqBar 	 -> VectorD(0.322855) 
		sst 	 -> VectorD(9.64184) 
		sse 	 -> VectorD(6.51426) 
		mse0 	 -> VectorD(0.00665399) 
		rmse 	 -> VectorD(0.0815720) 
		mae 	 -> VectorD(0.0630903) 
		dfm 	 -> VectorD(11.0000) 
		df 	 -> VectorD(4887.00) 
		fStat 	 -> VectorD(213.301) 
		aic 	 -> VectorD(1087.64) 
		bic 	 -> VectorD(1146.28) 
		mape 	 -> VectorD(Infinity) 
		smape 	 -> VectorD(9.82628) 

